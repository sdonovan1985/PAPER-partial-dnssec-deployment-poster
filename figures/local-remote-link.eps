%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 239 232
%%Creator: yExport 1.4.0.1
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, April 29, 2015 4:17:43 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
239 232 setpagesize
0 0 0 0 setmargins
0 0 setorigin
239 232 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
239.000 0.00000 l
239.000 232.000 l
0.00000 232.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 239 232 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -241.000 -227.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
241.000 227.000 m
480.000 227.000 l
480.000 459.000 l
241.000 459.000 l
241.000 227.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -241.000 -227.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -241.000 -227.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -241.000 -227.000 ] defaultmatrix matrix concatmatrix setmatrix
0 J
1.45000 M
newpath
418.688 331.529 m
418.688 322.858 l
419.919 322.858 l
419.919 330.610 l
423.821 330.610 l
423.821 331.529 l
h
427.612 331.676 m
426.702 331.676 425.975 331.374 425.432 330.771  c
424.889 330.167 424.618 329.360 424.618 328.348  c
424.618 327.324 424.890 326.515 425.435 325.919  c
425.980 325.323 426.720 325.026 427.653 325.026  c
428.587 325.026 429.326 325.323 429.871 325.919  c
430.416 326.515 430.688 327.320 430.688 328.336  c
430.688 329.375 430.415 330.192 429.868 330.785  c
429.321 331.379 428.569 331.676 427.612 331.676  c
h
427.630 330.809 m
428.852 330.809 429.464 329.985 429.464 328.336  c
429.464 326.707 428.860 325.893 427.653 325.893  c
426.450 325.893 425.848 326.711 425.848 328.348  c
425.848 329.988 426.442 330.809 427.630 330.809  c
h
434.977 331.676 m
434.118 331.676 433.405 331.358 432.839 330.721  c
432.272 330.084 431.989 329.281 431.989 328.313  c
431.989 327.277 432.269 326.471 432.830 325.893  c
433.390 325.315 434.173 325.026 435.177 325.026  c
435.673 325.026 436.227 325.094 436.841 325.231  c
436.841 326.197 l
436.188 326.006 435.657 325.910 435.247 325.910  c
434.657 325.910 434.183 326.132 433.826 326.575  c
433.469 327.019 433.290 327.610 433.290 328.348  c
433.290 329.063 433.473 329.641 433.841 330.082  c
434.208 330.524 434.688 330.744 435.282 330.744  c
435.809 330.744 436.352 330.610 436.911 330.340  c
436.911 331.336 l
436.165 331.563 435.520 331.676 434.977 331.676  c
h
441.921 330.721 m
441.229 331.358 440.563 331.676 439.923 331.676  c
439.395 331.676 438.958 331.511 438.610 331.181  c
438.263 330.851 438.089 330.434 438.089 329.930  c
438.089 329.235 438.381 328.700 438.965 328.327  c
439.549 327.954 440.386 327.768 441.475 327.768  c
441.751 327.768 l
441.751 327.000 l
441.751 326.262 441.372 325.893 440.614 325.893  c
440.005 325.893 439.346 326.080 438.639 326.455  c
438.639 325.500 l
439.417 325.184 440.145 325.026 440.825 325.026  c
441.536 325.026 442.060 325.186 442.398 325.506  c
442.736 325.826 442.905 326.324 442.905 327.000  c
442.905 329.883 l
442.905 330.543 443.108 330.873 443.514 330.873  c
443.565 330.873 443.639 330.865 443.737 330.850  c
443.819 331.488 l
443.557 331.613 443.268 331.676 442.952 331.676  c
442.413 331.676 442.069 331.358 441.921 330.721  c
h
441.751 330.094 m
441.751 328.447 l
441.364 328.436 l
440.731 328.436 440.220 328.556 439.829 328.796  c
439.438 329.036 439.243 329.352 439.243 329.742  c
439.243 330.020 439.341 330.254 439.536 330.445  c
439.731 330.637 439.970 330.733 440.251 330.733  c
440.731 330.733 441.231 330.520 441.751 330.094  c
h
445.266 331.529 m
445.266 322.277 l
446.421 322.277 l
446.421 331.529 l
h
f
newpath
411.303 345.662 m
411.303 336.990 l
412.510 336.990 l
416.875 343.688 l
416.875 336.990 l
417.930 336.990 l
417.930 345.662 l
416.728 345.662 l
412.357 338.965 l
412.357 345.662 l
h
424.867 345.457 m
424.094 345.692 423.431 345.809 422.881 345.809  c
421.943 345.809 421.179 345.497 420.587 344.874  c
419.995 344.251 419.699 343.444 419.699 342.451  c
419.699 341.486 419.960 340.695 420.481 340.078  c
421.003 339.461 421.670 339.152 422.482 339.152  c
423.252 339.152 423.846 339.426 424.266 339.973  c
424.686 340.520 424.896 341.297 424.896 342.305  c
424.890 342.662 l
420.877 342.662 l
421.045 344.174 421.785 344.930 423.097 344.930  c
423.578 344.930 424.168 344.801 424.867 344.543  c
h
420.930 341.795 m
423.736 341.795 l
423.736 340.611 423.295 340.020 422.412 340.020  c
421.525 340.020 421.031 340.611 420.930 341.795  c
h
428.799 345.809 m
428.213 345.809 427.756 345.641 427.428 345.305  c
427.099 344.969 426.935 344.502 426.935 343.904  c
426.935 340.166 l
426.138 340.166 l
426.138 339.299 l
426.935 339.299 l
426.935 338.145 l
428.090 338.033 l
428.090 339.299 l
429.754 339.299 l
429.754 340.166 l
428.090 340.166 l
428.090 343.694 l
428.090 344.526 428.449 344.942 429.168 344.942  c
429.320 344.942 429.506 344.916 429.724 344.865  c
429.724 345.662 l
429.369 345.760 429.060 345.809 428.799 345.809  c
h
432.115 345.662 m
430.293 339.299 l
431.424 339.299 l
432.818 344.227 l
434.324 339.299 l
435.478 339.299 l
436.797 344.227 l
438.396 339.299 l
439.387 339.299 l
437.312 345.662 l
436.152 345.662 l
434.805 340.735 l
433.281 345.662 l
h
443.113 345.809 m
442.203 345.809 441.476 345.507 440.933 344.903  c
440.390 344.300 440.119 343.492 440.119 342.481  c
440.119 341.457 440.391 340.648 440.936 340.052  c
441.481 339.456 442.221 339.158 443.154 339.158  c
444.088 339.158 444.827 339.456 445.372 340.052  c
445.917 340.648 446.189 341.453 446.189 342.469  c
446.189 343.508 445.916 344.324 445.369 344.918  c
444.822 345.512 444.070 345.809 443.113 345.809  c
h
443.131 344.942 m
444.353 344.942 444.965 344.117 444.965 342.469  c
444.965 340.840 444.361 340.026 443.154 340.026  c
441.951 340.026 441.349 340.844 441.349 342.481  c
441.349 344.121 441.943 344.942 443.131 344.942  c
h
447.994 345.662 m
447.994 339.299 l
449.148 339.299 l
449.148 340.494 l
449.605 339.604 450.269 339.158 451.140 339.158  c
451.258 339.158 451.381 339.168 451.510 339.188  c
451.510 340.266 l
451.310 340.199 451.135 340.166 450.982 340.166  c
450.252 340.166 449.640 340.600 449.148 341.467  c
449.148 345.662 l
h
452.904 345.662 m
452.904 336.410 l
454.058 336.410 l
454.058 342.387 l
456.754 339.299 l
457.996 339.299 l
455.424 342.270 l
458.529 345.662 l
457.053 345.662 l
454.058 342.399 l
454.058 345.662 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
268.764 354.194 m
464.764 354.194 l
464.764 442.194 l
268.764 442.194 l
268.764 354.194 l
h
S
2 J
10.0000 M
q
[ 40.0000 0.00000 0.00000 48.0000 292.375 264.387 ] concat
<<
/ImageType 1
/Width 40  /Height 48
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [40 0 0 48 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
GauI778GI-(l!M`)\No;#V-0+YTQ2_LB,.XE"0VfG8]2lh;-n0(;RIVk.>^^_q[9.LH`0_SY#-3mj\(t
ICnXn0AGUaq>'sdI"-WqH$O[]H?s[T[&9h"USFT`WN!J?]!AWI]Y(na['ZX)Uo:5jWiCrFqYL'Nk%:'A
N/Z!+c>IH7>[C`cI!khsiSX5%q0@I>%u=<`qtn";]/r)9!O]>C)3%)e2E!H+\[Js?41ClU+?r(T0/"t+
-RUDp.jH8`/M/P#,pbQ33Ai\%Ycs3c#6tLkqnUQjAnHdQLBe%hJbJg2lGZIi8kMcNN/s$\NK'ctWDMf6
LPOpMj36TAk!hj27n#kS\$lGsR7rS3s5Z'p1q^K6!$sBgP36b)GtM2u1JD\Bgsss*f@Mr<1c.'I-/#=8
QhuYt$K<j,M%#`CcHa^gAUqXoIWBIlP[7Ho=B\m;'6,fe2b/@bNIcW]?>47nD/!]m6SW*!'5jUaFHm^_
)]OF8ZEgdL]tLna\%0&[]"1KR\3-L:]=Y\-K7fAOPIJ"[r>2DO(Ddm5OZg4^[C*WYb:Yb<5!D+m]stS^
]"5J`\[fDeA`#X54?PekEkODu]=U-GZ#//:1d3r]&h\/@!aD-#p[IZk0Gh5O/hV$ZDI-XUXLl;VTM'BF
D/BaA^:C3*;La+C9f(KjA>32!o^qdc\@AcI0OJ0oS(s[0+I7j1.k<,[*LT0iPg!b`R%jEPH+L\qZbn3T
$lb9IqSk?I5Kj`\B"__,GS_AF!HN7&;%NP/It)rg_^:_hA_3-'%"T.["JAF^9Me<aGl#Hc5<hAq:d(-b
+<P^adQeJ4l.(J,*ZhJ@bKB+e%1*?W6.Bs)/?r6YO,o>:2`NcV4$-Y0QXgjt:s\h,oYfXdEHQE3j<AT4
\EkmA>co7PZm6u>bG2kg5e,T_ij,Q6E$HPN&eYgRrf`NZR\BZ7o--6tM<5P/>hct"mU2Y;]1KMg+n+"3
eDM74"hl+F6jJO#aQ!ZL33pbI'L.c%C^g]r_C<#F/ub'9F!6>J&;S,f/H#i&is!9b$g+2Y;-dHJWPue2
?G]nB&\A-"7gW%)XscCkBHn_3Bi/QM^:oWr+Qgm+2(0ipCul&a7t`2[)8"uo,0.Wgl'2MsTcf45&-nOf
n1F%cfj+;si6"ibIRJ,=.a`3,XP_>&Ab_CMOVek57JH!qb"i.,Ob?+<W,Q+f7CYIS!BAdhFr#mf<j*GL
Qeb&UW6&\TJ>iL)?<M=E6rD:,;D0Y$Xe&08lG^^be8tFW"'rG'5ttVT:_tbA4IWd-7]PO43HhogO!ZLP
C:O$Z7hoPj1c1Gh2S"2_X63APC>%PM"9bBl5g^YV'5aO.bq_(2Z&G';(kmm6C>ttpQJCKZ@Y.tsE^&K?
@O"1s`/iuc:cTUpa]SW"+9Fd,j:N:_[`(:Z`c_C)(G+i$QGi-pG.9$%M`W?M,=]V7M'!<@fsEj`nKPjo
XE)*hYV]DYLf)W!%W8p*#:MUCa;Kj9.d&%b"4K[Y@TrU?YE2pE&4a(t,A%I%i$p@cD(ZY:2+q;1Ahr>P
AAYgi$LKQl.mIK&F9#$SFECLU&K-;Y1G2flbOZ>>pKKkFo(;Rm,M_7i+#,cjr.poeCp9A@_D'<]cK&*'
5X>\Jp%;<NM];6_"H378LTL.jkQ\$-)R1)\9pPN*h^To=:\78hU^GeOM+d:$_Bi8@ECkUb\82CE>S7.4
q`0uK>.JJ:T6'g%Ps59!F3tab>_GNlQi:d[,&R[<9eIA&CS1^KPM^D?7\_:_l:3a9EA8Kbli$cfq2:E\
Y+1YkEm\3q>c%e0_-eD+n/[b6rnk&#Df;ST*&-K<M1Ti*AUH`BY+#e3]jWPW)q'U7U8oW)aX6!hAj)-B
~>
Q
0 J
1.45000 M
newpath
266.370 255.856 m
266.370 248.104 l
263.294 248.104 l
263.294 247.184 l
270.677 247.184 l
270.677 248.104 l
267.601 248.104 l
267.601 255.856 l
h
271.931 255.856 m
271.931 249.492 l
273.085 249.492 l
273.085 250.688 l
273.542 249.797 274.206 249.352 275.077 249.352  c
275.194 249.352 275.317 249.362 275.446 249.381  c
275.446 250.459 l
275.247 250.393 275.071 250.360 274.919 250.360  c
274.188 250.360 273.577 250.793 273.085 251.660  c
273.085 255.856 l
h
280.819 255.856 m
280.819 254.660 l
280.206 255.555 279.462 256.002 278.587 256.002  c
278.032 256.002 277.591 255.827 277.263 255.478  c
276.935 255.128 276.771 254.657 276.771 254.063  c
276.771 249.492 l
277.925 249.492 l
277.925 253.688 l
277.925 254.164 277.994 254.503 278.133 254.704  c
278.271 254.906 278.503 255.006 278.827 255.006  c
279.530 255.006 280.194 254.543 280.819 253.617  c
280.819 249.492 l
281.974 249.492 l
281.974 255.856 l
h
285.976 256.002 m
285.448 256.002 284.808 255.879 284.054 255.633  c
284.054 254.573 l
284.808 254.948 285.464 255.135 286.022 255.135  c
286.354 255.135 286.630 255.045 286.849 254.866  c
287.067 254.686 287.177 254.461 287.177 254.192  c
287.177 253.797 286.870 253.471 286.257 253.213  c
285.583 252.926 l
284.587 252.512 284.089 251.916 284.089 251.139  c
284.089 250.584 284.285 250.148 284.678 249.829  c
285.070 249.511 285.608 249.352 286.292 249.352  c
286.647 249.352 287.087 249.401 287.610 249.498  c
287.851 249.545 l
287.851 250.506 l
287.206 250.315 286.694 250.219 286.315 250.219  c
285.573 250.219 285.202 250.489 285.202 251.028  c
285.202 251.375 285.483 251.668 286.046 251.907  c
286.603 252.141 l
287.231 252.407 287.677 252.687 287.938 252.982  c
288.200 253.277 288.331 253.645 288.331 254.086  c
288.331 254.645 288.110 255.104 287.669 255.463  c
287.228 255.823 286.663 256.002 285.976 256.002  c
h
292.315 256.002 m
291.729 256.002 291.272 255.834 290.944 255.498  c
290.616 255.162 290.452 254.696 290.452 254.098  c
290.452 250.360 l
289.655 250.360 l
289.655 249.492 l
290.452 249.492 l
290.452 248.338 l
291.606 248.227 l
291.606 249.492 l
293.271 249.492 l
293.271 250.360 l
291.606 250.360 l
291.606 253.887 l
291.606 254.719 291.966 255.135 292.685 255.135  c
292.837 255.135 293.022 255.110 293.241 255.059  c
293.241 255.856 l
292.886 255.953 292.577 256.002 292.315 256.002  c
h
299.558 255.651 m
298.784 255.885 298.122 256.002 297.571 256.002  c
296.634 256.002 295.869 255.691 295.277 255.068  c
294.686 254.445 294.390 253.637 294.390 252.645  c
294.390 251.680 294.650 250.889 295.172 250.272  c
295.693 249.655 296.360 249.346 297.173 249.346  c
297.942 249.346 298.537 249.619 298.957 250.166  c
299.377 250.713 299.587 251.491 299.587 252.498  c
299.581 252.856 l
295.567 252.856 l
295.735 254.367 296.476 255.123 297.788 255.123  c
298.269 255.123 298.858 254.994 299.558 254.737  c
h
295.620 251.989 m
298.427 251.989 l
298.427 250.805 297.985 250.213 297.103 250.213  c
296.216 250.213 295.722 250.805 295.620 251.989  c
h
305.663 255.856 m
305.663 254.660 l
305.194 255.555 304.487 256.002 303.542 256.002  c
302.776 256.002 302.174 255.723 301.734 255.164  c
301.295 254.606 301.075 253.842 301.075 252.873  c
301.075 251.815 301.324 250.963 301.822 250.319  c
302.320 249.674 302.976 249.352 303.788 249.352  c
304.542 249.352 305.167 249.641 305.663 250.219  c
305.663 246.604 l
306.823 246.604 l
306.823 255.856 l
h
305.663 251.010 m
305.065 250.483 304.499 250.219 303.964 250.219  c
302.858 250.219 302.306 251.065 302.306 252.756  c
302.306 254.244 302.798 254.989 303.782 254.989  c
304.423 254.989 305.050 254.639 305.663 253.940  c
h
312.894 255.856 m
312.894 247.184 l
315.519 247.184 l
316.351 247.184 316.988 247.367 317.432 247.735  c
317.875 248.102 318.097 248.635 318.097 249.334  c
318.097 250.491 317.513 251.311 316.345 251.795  c
319.239 255.856 l
317.728 255.856 l
315.261 252.188 l
314.112 252.188 l
314.112 255.856 l
h
314.112 251.268 m
314.511 251.268 l
316.058 251.268 316.831 250.660 316.831 249.446  c
316.831 248.551 316.183 248.104 314.886 248.104  c
314.112 248.104 l
h
325.181 255.651 m
324.407 255.885 323.745 256.002 323.194 256.002  c
322.257 256.002 321.492 255.691 320.900 255.068  c
320.309 254.445 320.013 253.637 320.013 252.645  c
320.013 251.680 320.273 250.889 320.795 250.272  c
321.316 249.655 321.983 249.346 322.796 249.346  c
323.565 249.346 324.160 249.619 324.580 250.166  c
325.000 250.713 325.210 251.491 325.210 252.498  c
325.204 252.856 l
321.190 252.856 l
321.358 254.367 322.099 255.123 323.411 255.123  c
323.892 255.123 324.481 254.994 325.181 254.737  c
h
321.243 251.989 m
324.050 251.989 l
324.050 250.805 323.608 250.213 322.726 250.213  c
321.839 250.213 321.345 250.805 321.243 251.989  c
h
328.890 256.002 m
328.362 256.002 327.722 255.879 326.968 255.633  c
326.968 254.573 l
327.722 254.948 328.378 255.135 328.937 255.135  c
329.269 255.135 329.544 255.045 329.763 254.866  c
329.981 254.686 330.091 254.461 330.091 254.192  c
330.091 253.797 329.784 253.471 329.171 253.213  c
328.497 252.926 l
327.501 252.512 327.003 251.916 327.003 251.139  c
327.003 250.584 327.199 250.148 327.592 249.829  c
327.984 249.511 328.522 249.352 329.206 249.352  c
329.562 249.352 330.001 249.401 330.524 249.498  c
330.765 249.545 l
330.765 250.506 l
330.120 250.315 329.608 250.219 329.229 250.219  c
328.487 250.219 328.116 250.489 328.116 251.028  c
328.116 251.375 328.397 251.668 328.960 251.907  c
329.517 252.141 l
330.146 252.407 330.591 252.687 330.853 252.982  c
331.114 253.277 331.245 253.645 331.245 254.086  c
331.245 254.645 331.024 255.104 330.583 255.463  c
330.142 255.823 329.577 256.002 328.890 256.002  c
h
335.810 256.002 m
334.899 256.002 334.173 255.700 333.630 255.097  c
333.087 254.493 332.815 253.686 332.815 252.674  c
332.815 251.651 333.088 250.841 333.633 250.245  c
334.178 249.650 334.917 249.352 335.851 249.352  c
336.784 249.352 337.523 249.650 338.068 250.245  c
338.613 250.841 338.886 251.647 338.886 252.662  c
338.886 253.701 338.612 254.518 338.065 255.112  c
337.519 255.705 336.767 256.002 335.810 256.002  c
h
335.827 255.135 m
337.050 255.135 337.661 254.311 337.661 252.662  c
337.661 251.033 337.058 250.219 335.851 250.219  c
334.647 250.219 334.046 251.037 334.046 252.674  c
334.046 254.315 334.640 255.135 335.827 255.135  c
h
340.690 255.856 m
340.690 246.604 l
341.845 246.604 l
341.845 255.856 l
h
345.478 255.856 m
343.110 249.492 l
344.265 249.492 l
346.116 254.444 l
348.067 249.492 l
349.146 249.492 l
346.632 255.856 l
h
355.034 255.651 m
354.261 255.885 353.599 256.002 353.048 256.002  c
352.110 256.002 351.346 255.691 350.754 255.068  c
350.162 254.445 349.866 253.637 349.866 252.645  c
349.866 251.680 350.127 250.889 350.648 250.272  c
351.170 249.655 351.837 249.346 352.649 249.346  c
353.419 249.346 354.014 249.619 354.434 250.166  c
354.854 250.713 355.063 251.491 355.063 252.498  c
355.058 252.856 l
351.044 252.856 l
351.212 254.367 351.952 255.123 353.265 255.123  c
353.745 255.123 354.335 254.994 355.034 254.737  c
h
351.097 251.989 m
353.903 251.989 l
353.903 250.805 353.462 250.213 352.579 250.213  c
351.692 250.213 351.198 250.805 351.097 251.989  c
h
357.056 255.856 m
357.056 249.492 l
358.210 249.492 l
358.210 250.688 l
358.667 249.797 359.331 249.352 360.202 249.352  c
360.319 249.352 360.442 249.362 360.571 249.381  c
360.571 250.459 l
360.372 250.393 360.196 250.360 360.044 250.360  c
359.313 250.360 358.702 250.793 358.210 251.660  c
358.210 255.856 l
h
f
2 J
10.0000 M
q
[ 40.0000 0.00000 0.00000 47.0000 292.236 374.750 ] concat
<<
/ImageType 1
/Width 40  /Height 47
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [40 0 0 47 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
GauJ"M-!k^*XD1aCsJGj-Cm&c:7@bJ1=N%iACBPG9p=g5CuT!)VFG&igip^hMP(6bTVA*hJ>fQT5'Gdm
8!YMF+S^2*0%)_&9FNb"hYE^dn:Bc?IGB1aquG[J7q@[fi.St6k1THqqKTb1f!;RP656R6K^NjYG@u<\
EBL]Xh)EBF?aC^u*+p_@=iPSJj1AMs]i=7iPU7Z]7VomdOWiU)r:ei=OIKR.D;K20maXoB2&l(#ENE%P
rGcDHHjP;8(ja76QHf_q]/RaV01YA1C"=r9QHOpC^CM/7p)20Mkg+D;r^tSpUmkPRSLS8'[@d7:&WMB>
F/E5;ZtuS.'WHC]Z<6PJ:<fEce7Vsorm[`+hl3KhJ\AVs[O@dkTM,0O];HS^n(#PFH1maiNIcQ=s3JC)
182N0JqJLS(bu0(M<rai[dI3rUl8g\U0h!=0Q:mnS4bYj&ITF1B1@jW^"QH!ZoIK?<9(_@XO$^&>(PuO
a*qgR"Pl]beSR@q+q?:Y,]jo)^p8M_'[0s8lMr_SAe$+6/Lcu/8^kV)Q-g(UUe-MH/I.mT!`'U1AUNCq
H1+,'VeX%P^$)S*p9b2)]pjR]AS=bkO)&qdON<4bmumr[KYD38'=t%#er!W-8'Q)<SuS!kRo$qB1QfTq
QJl4SGKpL1>[YYU<kUcZ"7(CY#ln*>-pp67"r\KFE1l(hL'TJ&Z=ir7Mj%A]N6K&OmRaTi8Y.e'AVfL(
QdS.6A@k=h\OJBIldl'<B(OCJ9=t$_7K:\Bo@%tdcXq+tM(N/8%5/mrB4M$@&Hn!<>?i1DC-rk]OAP`$
)t&pj9hq1$.ItQDV;Rm^0Dn5@NS6#pRU5</2INVRGLZu3FY!G<;4qbhga1e@<C@'k]0i"i9p]B-;tK5P
JqI<IP)E(UhFY"i@*f1jojjDLm*K9H<VtI;.8ABpmoBc?AP:ter'3I6_eI-tmKeso1Srb?@`"G!KOlNX
&O=_[_>TCRk3m=e&e;>umT60lJm=&,3:<&?9@\VAIs8b91q.kXS\LZMAdnpU2[4EFh>81)5q^tuR/:<e
/<M.U7a\m+W&X'kbJFU,iDRhIKj3ag*GP`nKuj_k;Y<ZG6C6uTjt0.(K5/-:YWlLgjmR4dd"@kLIa*%@
lo2_%J73P:87+PlRE(-$>\KBl+3uo!G,tVp+M72Bs2-Zs`HT!tp,0#W];6*1TAWUA=gp]*#L`fZ,r<7S
UZgl.k)\9I^TWoOeu^E5Rib=-F1Ld3Rf`R\f-RCCE&8@J`cTs)\7O4B+`pf3fcO!lDU\:9%NcAo\MIhI
@DXddYd3pbbC"NXoP(oMcB__+Bp)ife(eN'b,9+L!a"-Fs"G7^qdA3Bb9K!MY#112>ENWaJ;YV<8%DlT
gTi:3e7#!ZK<7C.l:oI8Bb;-,eJ]2>*u')RFR6+hP06s*i_:N@"mC,c]W`GsYh-%QlZ>eUb4_3?QY0*N
4IL!g]Q0-e'JMt+,mnHC@#k>1(LXkjEH$Y6Nona#CJX.b$>f6(,W;=2bP;'af'i9/q_r?3^S]fZU*,t-
<)mbOR,m"#6J&s(6bn7g6DQ6(/HdF137rg['d/jujJX@\TI53]^2`AfX9A*acVl5`2o"[-Fm)jX(#ZC!
7<?ZIg\JH8'>(ZkE?F`K"h=_+ESUFr?^IPgQYOar]g^DBi-moVCYQf!G@@hAO*g/G7-!/&6bVgh[s>Xe
GMEOpNjlM?GGq.Y>*B*Q:aRgfBMUS.cZWu^].\irr*=Q0U4']_d;rU)pD`4uCKSpg7Ga[6Pa9S8*Ms!H
LMm0QrB_THQ#=8mmX2GW/BE7=calrcch61+45g0JX)b4@qGEIS%`<7HD1T6:[T,%-%hG(Wc6J\a%+pP3
G04G<<sNgh1s4_Z3*e39AloSM!<10Z8_^!hqi>gD8tN'j(*Ah]p=`<PNZY.'7iW4t`T8/c@6hJ,-iL\Z
F,slbT=.hH@>B9RD&NK=oCZPPQp/X!rh<31jT<Jk*`b`,V*Th[3%X`$K^PEhGLIa:a*UhaKAp=1X"MP`
HZ7Hg/bX:CIJqU0Ql82X$S[WLYh&<J&shYC3kE\5HS4fm%10b$i&cG9Vhk:icNQ-E%AZ"Id>*OQH,S5!
0Jtgq)/^2bDmHUVY2@Z1:T"=;LMt)%>'''UTo=8PZpmT5oK\?9/=%#VESujicd"M_P'qm!cR=5+75P1[
XY*cCfBjMr5!Rs/aol.1,2[YLT,KSa)r>GH3cs+fZ2@o&Je$mK;;?ncBL-O.VE"!>CPB;UIB"^`e()NI
+mpbAC6Z`qh5se=oPDJSEk@Tn'APGQI\p8>O4u!Cl21'l(Z(cC\IEp#!8t`gRKUpZIJT/`qTZn4@;YSG
3-s)fc9Q.\>RF!fkYHm]K%,,+$q6gii$k(9*-ZlF`sQrnV6S0C]QFm#Bd3t/@dht<PK/_P3b&\ujR2(Y
R[CQ0-B/<YP2oeF4>]32gRk``\6*>Q,C*$d@+c!B?;fu1-%8bO,F*_p(a>JI!`-NBq@?`pGRa~>
Q
0 J
1.45000 M
newpath
271.696 439.239 m
271.696 430.567 l
272.927 430.567 l
272.927 438.319 l
276.829 438.319 l
276.829 439.239 l
h
280.620 439.386 m
279.710 439.386 278.983 439.084 278.440 438.480  c
277.897 437.877 277.626 437.069 277.626 436.057  c
277.626 435.034 277.898 434.224 278.443 433.629  c
278.988 433.033 279.728 432.735 280.661 432.735  c
281.595 432.735 282.334 433.033 282.879 433.629  c
283.424 434.224 283.696 435.030 283.696 436.046  c
283.696 437.085 283.423 437.901 282.876 438.495  c
282.329 439.089 281.577 439.386 280.620 439.386  c
h
280.638 438.518 m
281.860 438.518 282.472 437.694 282.472 436.046  c
282.472 434.417 281.868 433.602 280.661 433.602  c
279.458 433.602 278.856 434.421 278.856 436.057  c
278.856 437.698 279.450 438.518 280.638 438.518  c
h
287.985 439.386 m
287.126 439.386 286.413 439.067 285.847 438.430  c
285.280 437.794 284.997 436.991 284.997 436.022  c
284.997 434.987 285.277 434.180 285.838 433.602  c
286.398 433.024 287.181 432.735 288.185 432.735  c
288.681 432.735 289.235 432.804 289.849 432.940  c
289.849 433.907 l
289.196 433.716 288.665 433.620 288.255 433.620  c
287.665 433.620 287.191 433.842 286.834 434.285  c
286.477 434.728 286.298 435.319 286.298 436.057  c
286.298 436.772 286.481 437.350 286.849 437.792  c
287.216 438.233 287.696 438.454 288.290 438.454  c
288.817 438.454 289.360 438.319 289.919 438.050  c
289.919 439.046 l
289.173 439.272 288.528 439.386 287.985 439.386  c
h
294.929 438.430 m
294.237 439.067 293.571 439.386 292.931 439.386  c
292.403 439.386 291.966 439.221 291.618 438.890  c
291.271 438.560 291.097 438.143 291.097 437.639  c
291.097 436.944 291.389 436.410 291.973 436.037  c
292.557 435.664 293.394 435.477 294.483 435.477  c
294.759 435.477 l
294.759 434.710 l
294.759 433.971 294.380 433.602 293.622 433.602  c
293.013 433.602 292.354 433.790 291.647 434.165  c
291.647 433.210 l
292.425 432.893 293.153 432.735 293.833 432.735  c
294.544 432.735 295.068 432.895 295.406 433.216  c
295.744 433.536 295.913 434.034 295.913 434.710  c
295.913 437.593 l
295.913 438.253 296.116 438.583 296.522 438.583  c
296.573 438.583 296.647 438.575 296.745 438.559  c
296.827 439.198 l
296.565 439.323 296.276 439.386 295.960 439.386  c
295.421 439.386 295.077 439.067 294.929 438.430  c
h
294.759 437.804 m
294.759 436.157 l
294.372 436.145 l
293.739 436.145 293.228 436.265 292.837 436.506  c
292.446 436.746 292.251 437.061 292.251 437.452  c
292.251 437.729 292.349 437.964 292.544 438.155  c
292.739 438.346 292.978 438.442 293.259 438.442  c
293.739 438.442 294.239 438.229 294.759 437.804  c
h
298.274 439.239 m
298.274 429.987 l
299.429 429.987 l
299.429 439.239 l
h
305.505 439.239 m
305.505 430.567 l
308.130 430.567 l
308.962 430.567 309.600 430.751 310.043 431.118  c
310.486 431.485 310.708 432.018 310.708 432.718  c
310.708 433.874 310.124 434.694 308.956 435.179  c
311.851 439.239 l
310.339 439.239 l
307.872 435.571 l
306.724 435.571 l
306.724 439.239 l
h
306.724 434.651 m
307.122 434.651 l
308.669 434.651 309.442 434.044 309.442 432.829  c
309.442 431.934 308.794 431.487 307.497 431.487  c
306.724 431.487 l
h
317.792 439.034 m
317.019 439.268 316.356 439.386 315.806 439.386  c
314.868 439.386 314.104 439.074 313.512 438.451  c
312.920 437.828 312.624 437.020 312.624 436.028  c
312.624 435.063 312.885 434.272 313.406 433.655  c
313.928 433.038 314.595 432.729 315.407 432.729  c
316.177 432.729 316.771 433.003 317.191 433.550  c
317.611 434.096 317.821 434.874 317.821 435.882  c
317.815 436.239 l
313.802 436.239 l
313.970 437.751 314.710 438.507 316.022 438.507  c
316.503 438.507 317.093 438.378 317.792 438.120  c
h
313.854 435.372 m
316.661 435.372 l
316.661 434.188 316.220 433.596 315.337 433.596  c
314.450 433.596 313.956 434.188 313.854 435.372  c
h
321.501 439.386 m
320.974 439.386 320.333 439.263 319.579 439.016  c
319.579 437.956 l
320.333 438.331 320.989 438.518 321.548 438.518  c
321.880 438.518 322.155 438.429 322.374 438.249  c
322.593 438.069 322.702 437.845 322.702 437.575  c
322.702 437.180 322.396 436.854 321.782 436.596  c
321.108 436.309 l
320.112 435.895 319.614 435.300 319.614 434.522  c
319.614 433.968 319.811 433.531 320.203 433.213  c
320.596 432.894 321.134 432.735 321.817 432.735  c
322.173 432.735 322.612 432.784 323.136 432.882  c
323.376 432.929 l
323.376 433.889 l
322.731 433.698 322.220 433.602 321.841 433.602  c
321.099 433.602 320.728 433.872 320.728 434.411  c
320.728 434.759 321.009 435.052 321.571 435.290  c
322.128 435.524 l
322.757 435.790 323.202 436.070 323.464 436.365  c
323.726 436.660 323.856 437.028 323.856 437.470  c
323.856 438.028 323.636 438.487 323.194 438.846  c
322.753 439.206 322.188 439.386 321.501 439.386  c
h
328.421 439.386 m
327.511 439.386 326.784 439.084 326.241 438.480  c
325.698 437.877 325.427 437.069 325.427 436.057  c
325.427 435.034 325.699 434.224 326.244 433.629  c
326.789 433.033 327.528 432.735 328.462 432.735  c
329.396 432.735 330.135 433.033 330.680 433.629  c
331.225 434.224 331.497 435.030 331.497 436.046  c
331.497 437.085 331.224 437.901 330.677 438.495  c
330.130 439.089 329.378 439.386 328.421 439.386  c
h
328.438 438.518 m
329.661 438.518 330.272 437.694 330.272 436.046  c
330.272 434.417 329.669 433.602 328.462 433.602  c
327.259 433.602 326.657 434.421 326.657 436.057  c
326.657 437.698 327.251 438.518 328.438 438.518  c
h
333.302 439.239 m
333.302 429.987 l
334.456 429.987 l
334.456 439.239 l
h
338.089 439.239 m
335.722 432.876 l
336.876 432.876 l
338.728 437.827 l
340.679 432.876 l
341.757 432.876 l
339.243 439.239 l
h
347.646 439.034 m
346.872 439.268 346.210 439.386 345.659 439.386  c
344.722 439.386 343.957 439.074 343.365 438.451  c
342.773 437.828 342.478 437.020 342.478 436.028  c
342.478 435.063 342.738 434.272 343.260 433.655  c
343.781 433.038 344.448 432.729 345.261 432.729  c
346.030 432.729 346.625 433.003 347.045 433.550  c
347.465 434.096 347.675 434.874 347.675 435.882  c
347.669 436.239 l
343.655 436.239 l
343.823 437.751 344.563 438.507 345.876 438.507  c
346.356 438.507 346.946 438.378 347.646 438.120  c
h
343.708 435.372 m
346.515 435.372 l
346.515 434.188 346.073 433.596 345.190 433.596  c
344.304 433.596 343.810 434.188 343.708 435.372  c
h
349.667 439.239 m
349.667 432.876 l
350.821 432.876 l
350.821 434.071 l
351.278 433.180 351.942 432.735 352.813 432.735  c
352.931 432.735 353.054 432.745 353.183 432.764  c
353.183 433.843 l
352.983 433.776 352.808 433.743 352.655 433.743  c
351.925 433.743 351.313 434.177 350.821 435.044  c
350.821 439.239 l
h
f
2 J
10.0000 M
q
[ 40.0000 0.00000 0.00000 47.0000 401.764 374.750 ] concat
<<
/ImageType 1
/Width 40  /Height 47
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [40 0 0 47 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
GauJ"M-!k^*XD1aCsJGj-Cm&c:7@bJ1=N%iACBPG9p=g5CuT!)VFG&igip^hMP(6bTVA*hJ>fQT5'Gdm
8!YMF+S^2*0%)_&9FNb"hYE^dn:Bc?IGB1aquG[J7q@[fi.St6k1THqqKTb1f!;RP656R6K^NjYG@u<\
EBL]Xh)EBF?aC^u*+p_@=iPSJj1AMs]i=7iPU7Z]7VomdOWiU)r:ei=OIKR.D;K20maXoB2&l(#ENE%P
rGcDHHjP;8(ja76QHf_q]/RaV01YA1C"=r9QHOpC^CM/7p)20Mkg+D;r^tSpUmkPRSLS8'[@d7:&WMB>
F/E5;ZtuS.'WHC]Z<6PJ:<fEce7Vsorm[`+hl3KhJ\AVs[O@dkTM,0O];HS^n(#PFH1maiNIcQ=s3JC)
182N0JqJLS(bu0(M<rai[dI3rUl8g\U0h!=0Q:mnS4bYj&ITF1B1@jW^"QH!ZoIK?<9(_@XO$^&>(PuO
a*qgR"Pl]beSR@q+q?:Y,]jo)^p8M_'[0s8lMr_SAe$+6/Lcu/8^kV)Q-g(UUe-MH/I.mT!`'U1AUNCq
H1+,'VeX%P^$)S*p9b2)]pjR]AS=bkO)&qdON<4bmumr[KYD38'=t%#er!W-8'Q)<SuS!kRo$qB1QfTq
QJl4SGKpL1>[YYU<kUcZ"7(CY#ln*>-pp67"r\KFE1l(hL'TJ&Z=ir7Mj%A]N6K&OmRaTi8Y.e'AVfL(
QdS.6A@k=h\OJBIldl'<B(OCJ9=t$_7K:\Bo@%tdcXq+tM(N/8%5/mrB4M$@&Hn!<>?i1DC-rk]OAP`$
)t&pj9hq1$.ItQDV;Rm^0Dn5@NS6#pRU5</2INVRGLZu3FY!G<;4qbhga1e@<C@'k]0i"i9p]B-;tK5P
JqI<IP)E(UhFY"i@*f1jojjDLm*K9H<VtI;.8ABpmoBc?AP:ter'3I6_eI-tmKeso1Srb?@`"G!KOlNX
&O=_[_>TCRk3m=e&e;>umT60lJm=&,3:<&?9@\VAIs8b91q.kXS\LZMAdnpU2[4EFh>81)5q^tuR/:<e
/<M.U7a\m+W&X'kbJFU,iDRhIKj3ag*GP`nKuj_k;Y<ZG6C6uTjt0.(K5/-:YWlLgjmR4dd"@kLIa*%@
lo2_%J73P:87+PlRE(-$>\KBl+3uo!G,tVp+M72Bs2-Zs`HT!tp,0#W];6*1TAWUA=gp]*#L`fZ,r<7S
UZgl.k)\9I^TWoOeu^E5Rib=-F1Ld3Rf`R\f-RCCE&8@J`cTs)\7O4B+`pf3fcO!lDU\:9%NcAo\MIhI
@DXddYd3pbbC"NXoP(oMcB__+Bp)ife(eN'b,9+L!a"-Fs"G7^qdA3Bb9K!MY#112>ENWaJ;YV<8%DlT
gTi:3e7#!ZK<7C.l:oI8Bb;-,eJ]2>*u')RFR6+hP06s*i_:N@"mC,c]W`GsYh-%QlZ>eUb4_3?QY0*N
4IL!g]Q0-e'JMt+,mnHC@#k>1(LXkjEH$Y6Nona#CJX.b$>f6(,W;=2bP;'af'i9/q_r?3^S]fZU*,t-
<)mbOR,m"#6J&s(6bn7g6DQ6(/HdF137rg['d/jujJX@\TI53]^2`AfX9A*acVl5`2o"[-Fm)jX(#ZC!
7<?ZIg\JH8'>(ZkE?F`K"h=_+ESUFr?^IPgQYOar]g^DBi-moVCYQf!G@@hAO*g/G7-!/&6bVgh[s>Xe
GMEOpNjlM?GGq.Y>*B*Q:aRgfBMUS.cZWu^].\irr*=Q0U4']_d;rU)pD`4uCKSpg7Ga[6Pa9S8*Ms!H
LMm0QrB_THQ#=8mmX2GW/BE7=calrcch61+45g0JX)b4@qGEIS%`<7HD1T6:[T,%-%hG(Wc6J\a%+pP3
G04G<<sNgh1s4_Z3*e39AloSM!<10Z8_^!hqi>gD8tN'j(*Ah]p=`<PNZY.'7iW4t`T8/c@6hJ,-iL\Z
F,slbT=.hH@>B9RD&NK=oCZPPQp/X!rh<31jT<Jk*`b`,V*Th[3%X`$K^PEhGLIa:a*UhaKAp=1X"MP`
HZ7Hg/bX:CIJqU0Ql82X$S[WLYh&<J&shYC3kE\5HS4fm%10b$i&cG9Vhk:icNQ-E%AZ"Id>*OQH,S5!
0Jtgq)/^2bDmHUVY2@Z1:T"=;LMt)%>'''UTo=8PZpmT5oK\?9/=%#VESujicd"M_P'qm!cR=5+75P1[
XY*cCfBjMr5!Rs/aol.1,2[YLT,KSa)r>GH3cs+fZ2@o&Je$mK;;?ncBL-O.VE"!>CPB;UIB"^`e()NI
+mpbAC6Z`qh5se=oPDJSEk@Tn'APGQI\p8>O4u!Cl21'l(Z(cC\IEp#!8t`gRKUpZIJT/`qTZn4@;YSG
3-s)fc9Q.\>RF!fkYHm]K%,,+$q6gii$k(9*-ZlF`sQrnV6S0C]QFm#Bd3t/@dht<PK/_P3b&\ujR2(Y
R[CQ0-B/<YP2oeF4>]32gRk``\6*>Q,C*$d@+c!B?;fu1-%8bO,F*_p(a>JI!`-NBq@?`pGRa~>
Q
0 J
1.45000 M
newpath
383.772 439.239 m
383.772 430.567 l
386.133 430.567 l
387.180 430.567 387.932 430.744 388.389 431.097  c
388.846 431.451 389.075 432.032 389.075 432.841  c
389.075 433.763 388.762 434.485 388.137 435.009  c
387.512 435.532 386.645 435.794 385.536 435.794  c
384.991 435.794 l
384.991 439.239 l
h
384.991 434.862 m
385.489 434.862 l
386.219 434.862 386.784 434.694 387.182 434.358  c
387.581 434.022 387.780 433.548 387.780 432.934  c
387.780 432.415 387.624 432.044 387.311 431.821  c
386.999 431.598 386.477 431.487 385.747 431.487  c
384.991 431.487 l
h
395.104 439.034 m
394.331 439.268 393.669 439.386 393.118 439.386  c
392.180 439.386 391.416 439.074 390.824 438.451  c
390.232 437.828 389.936 437.020 389.936 436.028  c
389.936 435.063 390.197 434.272 390.718 433.655  c
391.240 433.038 391.907 432.729 392.719 432.729  c
393.489 432.729 394.084 433.003 394.504 433.550  c
394.923 434.096 395.133 434.874 395.133 435.882  c
395.128 436.239 l
391.114 436.239 l
391.282 437.751 392.022 438.507 393.335 438.507  c
393.815 438.507 394.405 438.378 395.104 438.120  c
h
391.167 435.372 m
393.973 435.372 l
393.973 434.188 393.532 433.596 392.649 433.596  c
391.762 433.596 391.268 434.188 391.167 435.372  c
h
401.790 439.034 m
401.016 439.268 400.354 439.386 399.803 439.386  c
398.866 439.386 398.101 439.074 397.509 438.451  c
396.918 437.828 396.622 437.020 396.622 436.028  c
396.622 435.063 396.882 434.272 397.404 433.655  c
397.925 433.038 398.592 432.729 399.405 432.729  c
400.174 432.729 400.769 433.003 401.189 433.550  c
401.609 434.096 401.819 434.874 401.819 435.882  c
401.813 436.239 l
397.799 436.239 l
397.967 437.751 398.708 438.507 400.020 438.507  c
400.501 438.507 401.090 438.378 401.790 438.120  c
h
397.852 435.372 m
400.659 435.372 l
400.659 434.188 400.217 433.596 399.335 433.596  c
398.448 433.596 397.954 434.188 397.852 435.372  c
h
403.811 439.239 m
403.811 432.876 l
404.965 432.876 l
404.965 434.071 l
405.423 433.180 406.087 432.735 406.958 432.735  c
407.075 432.735 407.198 432.745 407.327 432.764  c
407.327 433.843 l
407.128 433.776 406.952 433.743 406.799 433.743  c
406.069 433.743 405.458 434.177 404.965 435.044  c
404.965 439.239 l
h
412.483 439.239 m
412.483 430.567 l
415.108 430.567 l
415.940 430.567 416.578 430.751 417.021 431.118  c
417.465 431.485 417.686 432.018 417.686 432.718  c
417.686 433.874 417.102 434.694 415.934 435.179  c
418.829 439.239 l
417.317 439.239 l
414.850 435.571 l
413.702 435.571 l
413.702 439.239 l
h
413.702 434.651 m
414.100 434.651 l
415.647 434.651 416.421 434.044 416.421 432.829  c
416.421 431.934 415.772 431.487 414.475 431.487  c
413.702 431.487 l
h
424.770 439.034 m
423.997 439.268 423.335 439.386 422.784 439.386  c
421.846 439.386 421.082 439.074 420.490 438.451  c
419.898 437.828 419.602 437.020 419.602 436.028  c
419.602 435.063 419.863 434.272 420.384 433.655  c
420.906 433.038 421.573 432.729 422.385 432.729  c
423.155 432.729 423.750 433.003 424.170 433.550  c
424.590 434.096 424.799 434.874 424.799 435.882  c
424.794 436.239 l
420.780 436.239 l
420.948 437.751 421.688 438.507 423.001 438.507  c
423.481 438.507 424.071 438.378 424.770 438.120  c
h
420.833 435.372 m
423.639 435.372 l
423.639 434.188 423.198 433.596 422.315 433.596  c
421.428 433.596 420.934 434.188 420.833 435.372  c
h
428.479 439.386 m
427.952 439.386 427.311 439.263 426.557 439.016  c
426.557 437.956 l
427.311 438.331 427.967 438.518 428.526 438.518  c
428.858 438.518 429.133 438.429 429.352 438.249  c
429.571 438.069 429.680 437.845 429.680 437.575  c
429.680 437.180 429.374 436.854 428.760 436.596  c
428.087 436.309 l
427.090 435.895 426.592 435.300 426.592 434.522  c
426.592 433.968 426.789 433.531 427.181 433.213  c
427.574 432.894 428.112 432.735 428.796 432.735  c
429.151 432.735 429.590 432.784 430.114 432.882  c
430.354 432.929 l
430.354 433.889 l
429.710 433.698 429.198 433.602 428.819 433.602  c
428.077 433.602 427.706 433.872 427.706 434.411  c
427.706 434.759 427.987 435.052 428.549 435.290  c
429.106 435.524 l
429.735 435.790 430.180 436.070 430.442 436.365  c
430.704 436.660 430.835 437.028 430.835 437.470  c
430.835 438.028 430.614 438.487 430.173 438.846  c
429.731 439.206 429.167 439.386 428.479 439.386  c
h
435.399 439.386 m
434.489 439.386 433.762 439.084 433.219 438.480  c
432.676 437.877 432.405 437.069 432.405 436.057  c
432.405 435.034 432.677 434.224 433.222 433.629  c
433.767 433.033 434.507 432.735 435.440 432.735  c
436.374 432.735 437.113 433.033 437.658 433.629  c
438.203 434.224 438.475 435.030 438.475 436.046  c
438.475 437.085 438.202 437.901 437.655 438.495  c
437.108 439.089 436.356 439.386 435.399 439.386  c
h
435.417 438.518 m
436.639 438.518 437.251 437.694 437.251 436.046  c
437.251 434.417 436.647 433.602 435.440 433.602  c
434.237 433.602 433.635 434.421 433.635 436.057  c
433.635 437.698 434.229 438.518 435.417 438.518  c
h
440.280 439.239 m
440.280 429.987 l
441.434 429.987 l
441.434 439.239 l
h
445.067 439.239 m
442.700 432.876 l
443.854 432.876 l
445.706 437.827 l
447.657 432.876 l
448.735 432.876 l
446.221 439.239 l
h
454.624 439.034 m
453.850 439.268 453.188 439.386 452.637 439.386  c
451.700 439.386 450.935 439.074 450.343 438.451  c
449.752 437.828 449.456 437.020 449.456 436.028  c
449.456 435.063 449.716 434.272 450.238 433.655  c
450.759 433.038 451.426 432.729 452.239 432.729  c
453.008 432.729 453.603 433.003 454.023 433.550  c
454.443 434.096 454.653 434.874 454.653 435.882  c
454.647 436.239 l
450.633 436.239 l
450.801 437.751 451.542 438.507 452.854 438.507  c
453.335 438.507 453.924 438.378 454.624 438.120  c
h
450.686 435.372 m
453.493 435.372 l
453.493 434.188 453.051 433.596 452.169 433.596  c
451.282 433.596 450.788 434.188 450.686 435.372  c
h
456.645 439.239 m
456.645 432.876 l
457.799 432.876 l
457.799 434.071 l
458.257 433.180 458.921 432.735 459.792 432.735  c
459.909 432.735 460.032 432.745 460.161 432.764  c
460.161 433.843 l
459.962 433.776 459.786 433.743 459.633 433.743  c
458.903 433.743 458.292 434.177 457.799 435.044  c
457.799 439.239 l
h
f
2 J
10.0000 M
6.00000 w
0 J
1.45000 M
newpath
401.766 398.194 m
331.768 398.194 l
S
1.00000 w
newpath
348.787 374.469 m
348.787 366.717 l
345.711 366.717 l
345.711 365.797 l
353.094 365.797 l
353.094 366.717 l
350.018 366.717 l
350.018 374.469 l
h
354.348 374.469 m
354.348 368.105 l
355.502 368.105 l
355.502 369.301 l
355.959 368.410 356.623 367.965 357.494 367.965  c
357.611 367.965 357.734 367.975 357.863 367.994  c
357.863 369.072 l
357.664 369.006 357.488 368.973 357.336 368.973  c
356.605 368.973 355.994 369.406 355.502 370.273  c
355.502 374.469 l
h
363.236 374.469 m
363.236 373.273 l
362.623 374.168 361.879 374.615 361.004 374.615  c
360.449 374.615 360.008 374.440 359.680 374.091  c
359.352 373.741 359.188 373.270 359.188 372.676  c
359.188 368.105 l
360.342 368.105 l
360.342 372.301 l
360.342 372.777 360.411 373.116 360.550 373.317  c
360.688 373.519 360.920 373.619 361.244 373.619  c
361.947 373.619 362.611 373.156 363.236 372.230  c
363.236 368.105 l
364.391 368.105 l
364.391 374.469 l
h
368.393 374.615 m
367.865 374.615 367.225 374.492 366.471 374.246  c
366.471 373.186 l
367.225 373.561 367.881 373.748 368.439 373.748  c
368.771 373.748 369.047 373.658 369.266 373.479  c
369.484 373.299 369.594 373.074 369.594 372.805  c
369.594 372.410 369.287 372.084 368.674 371.826  c
368.000 371.539 l
367.004 371.125 366.506 370.529 366.506 369.752  c
366.506 369.197 366.702 368.761 367.095 368.442  c
367.487 368.124 368.025 367.965 368.709 367.965  c
369.064 367.965 369.504 368.014 370.027 368.111  c
370.268 368.158 l
370.268 369.119 l
369.623 368.928 369.111 368.832 368.732 368.832  c
367.990 368.832 367.619 369.102 367.619 369.641  c
367.619 369.988 367.900 370.281 368.463 370.520  c
369.020 370.754 l
369.648 371.020 370.094 371.300 370.355 371.595  c
370.617 371.890 370.748 372.258 370.748 372.699  c
370.748 373.258 370.527 373.717 370.086 374.076  c
369.645 374.436 369.080 374.615 368.393 374.615  c
h
374.732 374.615 m
374.146 374.615 373.689 374.447 373.361 374.111  c
373.033 373.775 372.869 373.309 372.869 372.711  c
372.869 368.973 l
372.072 368.973 l
372.072 368.105 l
372.869 368.105 l
372.869 366.951 l
374.023 366.840 l
374.023 368.105 l
375.688 368.105 l
375.688 368.973 l
374.023 368.973 l
374.023 372.500 l
374.023 373.332 374.383 373.748 375.102 373.748  c
375.254 373.748 375.439 373.723 375.658 373.672  c
375.658 374.469 l
375.303 374.566 374.994 374.615 374.732 374.615  c
h
381.975 374.264 m
381.201 374.498 380.539 374.615 379.988 374.615  c
379.051 374.615 378.286 374.304 377.694 373.681  c
377.103 373.058 376.807 372.250 376.807 371.258  c
376.807 370.293 377.067 369.502 377.589 368.885  c
378.110 368.268 378.777 367.959 379.590 367.959  c
380.359 367.959 380.954 368.232 381.374 368.779  c
381.794 369.326 382.004 370.104 382.004 371.111  c
381.998 371.469 l
377.984 371.469 l
378.152 372.980 378.893 373.736 380.205 373.736  c
380.686 373.736 381.275 373.607 381.975 373.350  c
h
378.037 370.602 m
380.844 370.602 l
380.844 369.418 380.402 368.826 379.520 368.826  c
378.633 368.826 378.139 369.418 378.037 370.602  c
h
388.080 374.469 m
388.080 373.273 l
387.611 374.168 386.904 374.615 385.959 374.615  c
385.193 374.615 384.591 374.336 384.151 373.777  c
383.712 373.219 383.492 372.455 383.492 371.486  c
383.492 370.428 383.741 369.576 384.239 368.932  c
384.737 368.287 385.393 367.965 386.205 367.965  c
386.959 367.965 387.584 368.254 388.080 368.832  c
388.080 365.217 l
389.240 365.217 l
389.240 374.469 l
h
388.080 369.623 m
387.482 369.096 386.916 368.832 386.381 368.832  c
385.275 368.832 384.723 369.678 384.723 371.369  c
384.723 372.857 385.215 373.602 386.199 373.602  c
386.840 373.602 387.467 373.252 388.080 372.553  c
h
f
newpath
346.895 388.602 m
346.895 380.850 l
343.818 380.850 l
343.818 379.930 l
351.201 379.930 l
351.201 380.850 l
348.125 380.850 l
348.125 388.602 l
h
352.420 388.602 m
352.420 379.930 l
353.650 379.930 l
353.650 387.682 l
357.553 387.682 l
357.553 388.602 l
h
360.518 388.818 m
359.936 388.818 359.191 388.691 358.285 388.438  c
358.285 387.219 l
359.262 387.672 360.064 387.898 360.693 387.898  c
361.178 387.898 361.567 387.771 361.862 387.518  c
362.157 387.264 362.305 386.930 362.305 386.516  c
362.305 386.176 362.208 385.887 362.015 385.648  c
361.821 385.410 361.465 385.145 360.945 384.852  c
360.348 384.506 l
359.609 384.084 359.089 383.687 358.786 383.313  c
358.483 382.940 358.332 382.506 358.332 382.010  c
358.332 381.342 358.574 380.792 359.059 380.360  c
359.543 379.929 360.160 379.713 360.910 379.713  c
361.578 379.713 362.283 379.824 363.025 380.047  c
363.025 381.172 l
362.111 380.812 361.430 380.633 360.980 380.633  c
360.555 380.633 360.203 380.746 359.926 380.973  c
359.648 381.199 359.510 381.484 359.510 381.828  c
359.510 382.117 359.611 382.373 359.814 382.596  c
360.018 382.818 360.389 383.084 360.928 383.393  c
361.549 383.744 l
362.299 384.170 362.822 384.572 363.119 384.951  c
363.416 385.330 363.564 385.785 363.564 386.316  c
363.564 387.070 363.286 387.676 362.729 388.133  c
362.173 388.590 361.436 388.818 360.518 388.818  c
h
369.078 388.602 m
369.078 379.930 l
370.309 379.930 l
370.309 387.682 l
374.211 387.682 l
374.211 388.602 l
h
375.512 388.602 m
375.512 382.238 l
376.666 382.238 l
376.666 388.602 l
h
375.512 381.084 m
375.512 379.930 l
376.666 379.930 l
376.666 381.084 l
h
378.980 388.602 m
378.980 382.238 l
380.135 382.238 l
380.135 383.434 l
380.744 382.543 381.490 382.098 382.373 382.098  c
382.924 382.098 383.363 382.272 383.691 382.622  c
384.020 382.972 384.184 383.441 384.184 384.031  c
384.184 388.602 l
383.029 388.602 l
383.029 384.406 l
383.029 383.934 382.960 383.597 382.821 383.396  c
382.683 383.194 382.453 383.094 382.133 383.094  c
381.426 383.094 380.760 383.557 380.135 384.482  c
380.135 388.602 l
h
386.428 388.602 m
386.428 379.350 l
387.582 379.350 l
387.582 385.326 l
390.277 382.238 l
391.520 382.238 l
388.947 385.209 l
392.053 388.602 l
390.576 388.602 l
387.582 385.338 l
387.582 388.602 l
h
f
6.00000 w
1.00000 w
2 J
10.0000 M
6.00000 w
0 J
1.45000 M
newpath
312.000 312.014 m
312.000 374.755 l
S
1.00000 w
newpath
261.889 332.469 m
261.889 324.717 l
258.812 324.717 l
258.812 323.797 l
266.195 323.797 l
266.195 324.717 l
263.119 324.717 l
263.119 332.469 l
h
267.449 332.469 m
267.449 326.105 l
268.604 326.105 l
268.604 327.301 l
269.061 326.410 269.725 325.965 270.596 325.965  c
270.713 325.965 270.836 325.975 270.965 325.994  c
270.965 327.072 l
270.766 327.006 270.590 326.973 270.438 326.973  c
269.707 326.973 269.096 327.406 268.604 328.273  c
268.604 332.469 l
h
276.338 332.469 m
276.338 331.273 l
275.725 332.168 274.980 332.615 274.105 332.615  c
273.551 332.615 273.109 332.440 272.781 332.091  c
272.453 331.741 272.289 331.270 272.289 330.676  c
272.289 326.105 l
273.443 326.105 l
273.443 330.301 l
273.443 330.777 273.513 331.116 273.651 331.317  c
273.790 331.519 274.021 331.619 274.346 331.619  c
275.049 331.619 275.713 331.156 276.338 330.230  c
276.338 326.105 l
277.492 326.105 l
277.492 332.469 l
h
281.494 332.615 m
280.967 332.615 280.326 332.492 279.572 332.246  c
279.572 331.186 l
280.326 331.561 280.982 331.748 281.541 331.748  c
281.873 331.748 282.148 331.658 282.367 331.479  c
282.586 331.299 282.695 331.074 282.695 330.805  c
282.695 330.410 282.389 330.084 281.775 329.826  c
281.102 329.539 l
280.105 329.125 279.607 328.529 279.607 327.752  c
279.607 327.197 279.804 326.761 280.196 326.442  c
280.589 326.124 281.127 325.965 281.811 325.965  c
282.166 325.965 282.605 326.014 283.129 326.111  c
283.369 326.158 l
283.369 327.119 l
282.725 326.928 282.213 326.832 281.834 326.832  c
281.092 326.832 280.721 327.102 280.721 327.641  c
280.721 327.988 281.002 328.281 281.564 328.520  c
282.121 328.754 l
282.750 329.020 283.195 329.300 283.457 329.595  c
283.719 329.890 283.850 330.258 283.850 330.699  c
283.850 331.258 283.629 331.717 283.188 332.076  c
282.746 332.436 282.182 332.615 281.494 332.615  c
h
287.834 332.615 m
287.248 332.615 286.791 332.447 286.463 332.111  c
286.135 331.775 285.971 331.309 285.971 330.711  c
285.971 326.973 l
285.174 326.973 l
285.174 326.105 l
285.971 326.105 l
285.971 324.951 l
287.125 324.840 l
287.125 326.105 l
288.789 326.105 l
288.789 326.973 l
287.125 326.973 l
287.125 330.500 l
287.125 331.332 287.484 331.748 288.203 331.748  c
288.355 331.748 288.541 331.723 288.760 331.672  c
288.760 332.469 l
288.404 332.566 288.096 332.615 287.834 332.615  c
h
295.076 332.264 m
294.303 332.498 293.641 332.615 293.090 332.615  c
292.152 332.615 291.388 332.304 290.796 331.681  c
290.204 331.058 289.908 330.250 289.908 329.258  c
289.908 328.293 290.169 327.502 290.690 326.885  c
291.212 326.268 291.879 325.959 292.691 325.959  c
293.461 325.959 294.056 326.232 294.476 326.779  c
294.896 327.326 295.105 328.104 295.105 329.111  c
295.100 329.469 l
291.086 329.469 l
291.254 330.980 291.994 331.736 293.307 331.736  c
293.787 331.736 294.377 331.607 295.076 331.350  c
h
291.139 328.602 m
293.945 328.602 l
293.945 327.418 293.504 326.826 292.621 326.826  c
291.734 326.826 291.240 327.418 291.139 328.602  c
h
301.182 332.469 m
301.182 331.273 l
300.713 332.168 300.006 332.615 299.061 332.615  c
298.295 332.615 297.692 332.336 297.253 331.777  c
296.813 331.219 296.594 330.455 296.594 329.486  c
296.594 328.428 296.843 327.576 297.341 326.932  c
297.839 326.287 298.494 325.965 299.307 325.965  c
300.061 325.965 300.686 326.254 301.182 326.832  c
301.182 323.217 l
302.342 323.217 l
302.342 332.469 l
h
301.182 327.623 m
300.584 327.096 300.018 326.832 299.482 326.832  c
298.377 326.832 297.824 327.678 297.824 329.369  c
297.824 330.857 298.316 331.602 299.301 331.602  c
299.941 331.602 300.568 331.252 301.182 330.553  c
h
f
newpath
261.895 346.602 m
261.895 338.850 l
258.818 338.850 l
258.818 337.930 l
266.201 337.930 l
266.201 338.850 l
263.125 338.850 l
263.125 346.602 l
h
267.420 346.602 m
267.420 337.930 l
268.650 337.930 l
268.650 345.682 l
272.553 345.682 l
272.553 346.602 l
h
275.518 346.818 m
274.936 346.818 274.191 346.691 273.285 346.438  c
273.285 345.219 l
274.262 345.672 275.064 345.898 275.693 345.898  c
276.178 345.898 276.567 345.771 276.862 345.518  c
277.157 345.264 277.305 344.930 277.305 344.516  c
277.305 344.176 277.208 343.887 277.015 343.648  c
276.821 343.410 276.465 343.145 275.945 342.852  c
275.348 342.506 l
274.609 342.084 274.089 341.687 273.786 341.313  c
273.483 340.940 273.332 340.506 273.332 340.010  c
273.332 339.342 273.574 338.792 274.059 338.360  c
274.543 337.929 275.160 337.713 275.910 337.713  c
276.578 337.713 277.283 337.824 278.025 338.047  c
278.025 339.172 l
277.111 338.812 276.430 338.633 275.980 338.633  c
275.555 338.633 275.203 338.746 274.926 338.973  c
274.648 339.199 274.510 339.484 274.510 339.828  c
274.510 340.117 274.611 340.373 274.814 340.596  c
275.018 340.818 275.389 341.084 275.928 341.393  c
276.549 341.744 l
277.299 342.170 277.822 342.572 278.119 342.951  c
278.416 343.330 278.564 343.785 278.564 344.316  c
278.564 345.070 278.286 345.676 277.729 346.133  c
277.173 346.590 276.436 346.818 275.518 346.818  c
h
284.078 346.602 m
284.078 337.930 l
285.309 337.930 l
285.309 345.682 l
289.211 345.682 l
289.211 346.602 l
h
290.512 346.602 m
290.512 340.238 l
291.666 340.238 l
291.666 346.602 l
h
290.512 339.084 m
290.512 337.930 l
291.666 337.930 l
291.666 339.084 l
h
293.980 346.602 m
293.980 340.238 l
295.135 340.238 l
295.135 341.434 l
295.744 340.543 296.490 340.098 297.373 340.098  c
297.924 340.098 298.363 340.272 298.691 340.622  c
299.020 340.972 299.184 341.441 299.184 342.031  c
299.184 346.602 l
298.029 346.602 l
298.029 342.406 l
298.029 341.934 297.960 341.597 297.821 341.396  c
297.683 341.194 297.453 341.094 297.133 341.094  c
296.426 341.094 295.760 341.557 295.135 342.482  c
295.135 346.602 l
h
301.428 346.602 m
301.428 337.350 l
302.582 337.350 l
302.582 343.326 l
305.277 340.238 l
306.520 340.238 l
303.947 343.209 l
307.053 346.602 l
305.576 346.602 l
302.582 343.338 l
302.582 346.602 l
h
f
6.00000 w
1.00000 w
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
