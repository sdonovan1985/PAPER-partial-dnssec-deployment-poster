%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 226 158
%%Creator: yExport 1.4.0.1
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, April 29, 2015 4:00:01 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
226 158 setpagesize
0 0 0 0 setmargins
0 0 setorigin
226 158 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
226.000 0.00000 l
226.000 158.000 l
0.00000 158.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 226 158 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -229.000 -325.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
229.000 325.000 m
455.000 325.000 l
455.000 483.000 l
229.000 483.000 l
229.000 325.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -229.000 -325.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -229.000 -325.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -229.000 -325.000 ] defaultmatrix matrix concatmatrix setmatrix
0 J
1.45000 M
newpath
393.925 354.336 m
393.925 345.664 l
395.155 345.664 l
395.155 353.416 l
399.058 353.416 l
399.058 354.336 l
h
402.849 354.482 m
401.938 354.482 401.212 354.181 400.669 353.577  c
400.126 352.974 399.854 352.166 399.854 351.154  c
399.854 350.131 400.127 349.321 400.672 348.726  c
401.217 348.130 401.956 347.832 402.890 347.832  c
403.823 347.832 404.562 348.130 405.107 348.726  c
405.652 349.321 405.925 350.127 405.925 351.143  c
405.925 352.182 405.651 352.998 405.104 353.592  c
404.558 354.186 403.806 354.482 402.849 354.482  c
h
402.866 353.615 m
404.089 353.615 404.700 352.791 404.700 351.143  c
404.700 349.514 404.097 348.699 402.890 348.699  c
401.687 348.699 401.085 349.518 401.085 351.154  c
401.085 352.795 401.679 353.615 402.866 353.615  c
h
410.214 354.482 m
409.354 354.482 408.642 354.164 408.075 353.527  c
407.509 352.891 407.226 352.088 407.226 351.119  c
407.226 350.084 407.506 349.277 408.066 348.699  c
408.627 348.121 409.409 347.832 410.413 347.832  c
410.909 347.832 411.464 347.900 412.077 348.037  c
412.077 349.004 l
411.425 348.812 410.894 348.717 410.483 348.717  c
409.894 348.717 409.420 348.938 409.062 349.382  c
408.705 349.825 408.526 350.416 408.526 351.154  c
408.526 351.869 408.710 352.447 409.077 352.889  c
409.444 353.330 409.925 353.551 410.519 353.551  c
411.046 353.551 411.589 353.416 412.147 353.146  c
412.147 354.143 l
411.401 354.369 410.757 354.482 410.214 354.482  c
h
417.157 353.527 m
416.466 354.164 415.800 354.482 415.159 354.482  c
414.632 354.482 414.194 354.317 413.847 353.987  c
413.499 353.657 413.325 353.240 413.325 352.736  c
413.325 352.041 413.617 351.507 414.201 351.134  c
414.785 350.761 415.622 350.574 416.712 350.574  c
416.987 350.574 l
416.987 349.807 l
416.987 349.068 416.608 348.699 415.851 348.699  c
415.241 348.699 414.583 348.887 413.876 349.262  c
413.876 348.307 l
414.653 347.990 415.382 347.832 416.062 347.832  c
416.772 347.832 417.297 347.992 417.635 348.312  c
417.973 348.633 418.142 349.131 418.142 349.807  c
418.142 352.689 l
418.142 353.350 418.345 353.680 418.751 353.680  c
418.802 353.680 418.876 353.672 418.974 353.656  c
419.056 354.295 l
418.794 354.420 418.505 354.482 418.188 354.482  c
417.649 354.482 417.306 354.164 417.157 353.527  c
h
416.987 352.900 m
416.987 351.254 l
416.601 351.242 l
415.968 351.242 415.456 351.362 415.065 351.603  c
414.675 351.843 414.479 352.158 414.479 352.549  c
414.479 352.826 414.577 353.061 414.772 353.252  c
414.968 353.443 415.206 353.539 415.487 353.539  c
415.968 353.539 416.468 353.326 416.987 352.900  c
h
420.503 354.336 m
420.503 345.084 l
421.657 345.084 l
421.657 354.336 l
h
f
newpath
386.539 368.469 m
386.539 359.797 l
387.746 359.797 l
392.111 366.494 l
392.111 359.797 l
393.166 359.797 l
393.166 368.469 l
391.965 368.469 l
387.594 361.771 l
387.594 368.469 l
h
400.104 368.264 m
399.330 368.498 398.668 368.615 398.117 368.615  c
397.180 368.615 396.415 368.304 395.823 367.681  c
395.231 367.058 394.936 366.250 394.936 365.258  c
394.936 364.293 395.196 363.502 395.718 362.885  c
396.239 362.268 396.906 361.959 397.719 361.959  c
398.488 361.959 399.083 362.232 399.503 362.779  c
399.923 363.326 400.133 364.104 400.133 365.111  c
400.127 365.469 l
396.113 365.469 l
396.281 366.980 397.021 367.736 398.334 367.736  c
398.814 367.736 399.404 367.607 400.104 367.350  c
h
396.166 364.602 m
398.973 364.602 l
398.973 363.418 398.531 362.826 397.648 362.826  c
396.762 362.826 396.268 363.418 396.166 364.602  c
h
404.035 368.615 m
403.449 368.615 402.992 368.447 402.664 368.111  c
402.336 367.775 402.172 367.309 402.172 366.711  c
402.172 362.973 l
401.375 362.973 l
401.375 362.105 l
402.172 362.105 l
402.172 360.951 l
403.326 360.840 l
403.326 362.105 l
404.990 362.105 l
404.990 362.973 l
403.326 362.973 l
403.326 366.500 l
403.326 367.332 403.686 367.748 404.404 367.748  c
404.557 367.748 404.742 367.723 404.961 367.672  c
404.961 368.469 l
404.605 368.566 404.297 368.615 404.035 368.615  c
h
407.352 368.469 m
405.529 362.105 l
406.660 362.105 l
408.055 367.033 l
409.561 362.105 l
410.715 362.105 l
412.033 367.033 l
413.633 362.105 l
414.623 362.105 l
412.549 368.469 l
411.389 368.469 l
410.041 363.541 l
408.518 368.469 l
h
418.350 368.615 m
417.439 368.615 416.713 368.313 416.170 367.710  c
415.627 367.106 415.355 366.299 415.355 365.287  c
415.355 364.264 415.628 363.454 416.173 362.858  c
416.718 362.263 417.457 361.965 418.391 361.965  c
419.324 361.965 420.063 362.263 420.608 362.858  c
421.153 363.454 421.426 364.260 421.426 365.275  c
421.426 366.314 421.152 367.131 420.605 367.725  c
420.059 368.318 419.307 368.615 418.350 368.615  c
h
418.367 367.748 m
419.590 367.748 420.201 366.924 420.201 365.275  c
420.201 363.646 419.598 362.832 418.391 362.832  c
417.188 362.832 416.586 363.650 416.586 365.287  c
416.586 366.928 417.180 367.748 418.367 367.748  c
h
423.230 368.469 m
423.230 362.105 l
424.385 362.105 l
424.385 363.301 l
424.842 362.410 425.506 361.965 426.377 361.965  c
426.494 361.965 426.617 361.975 426.746 361.994  c
426.746 363.072 l
426.547 363.006 426.371 362.973 426.219 362.973  c
425.488 362.973 424.877 363.406 424.385 364.273  c
424.385 368.469 l
h
428.141 368.469 m
428.141 359.217 l
429.295 359.217 l
429.295 365.193 l
431.990 362.105 l
433.232 362.105 l
430.660 365.076 l
433.766 368.469 l
432.289 368.469 l
429.295 365.205 l
429.295 368.469 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
244.000 377.000 m
440.000 377.000 l
440.000 465.000 l
244.000 465.000 l
244.000 377.000 l
h
S
2 J
10.0000 M
q
[ 40.0000 0.00000 0.00000 47.0000 268.236 384.556 ] concat
<<
/ImageType 1
/Width 40  /Height 47
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [40 0 0 47 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
GauJ"M-!k^*XD1aCsJGj-Cm&c:7@bJ1=N%iACBPG9p=g5CuT!)VFG&igip^hMP(6bTVA*hJ>fQT5'Gdm
8!YMF+S^2*0%)_&9FNb"hYE^dn:Bc?IGB1aquG[J7q@[fi.St6k1THqqKTb1f!;RP656R6K^NjYG@u<\
EBL]Xh)EBF?aC^u*+p_@=iPSJj1AMs]i=7iPU7Z]7VomdOWiU)r:ei=OIKR.D;K20maXoB2&l(#ENE%P
rGcDHHjP;8(ja76QHf_q]/RaV01YA1C"=r9QHOpC^CM/7p)20Mkg+D;r^tSpUmkPRSLS8'[@d7:&WMB>
F/E5;ZtuS.'WHC]Z<6PJ:<fEce7Vsorm[`+hl3KhJ\AVs[O@dkTM,0O];HS^n(#PFH1maiNIcQ=s3JC)
182N0JqJLS(bu0(M<rai[dI3rUl8g\U0h!=0Q:mnS4bYj&ITF1B1@jW^"QH!ZoIK?<9(_@XO$^&>(PuO
a*qgR"Pl]beSR@q+q?:Y,]jo)^p8M_'[0s8lMr_SAe$+6/Lcu/8^kV)Q-g(UUe-MH/I.mT!`'U1AUNCq
H1+,'VeX%P^$)S*p9b2)]pjR]AS=bkO)&qdON<4bmumr[KYD38'=t%#er!W-8'Q)<SuS!kRo$qB1QfTq
QJl4SGKpL1>[YYU<kUcZ"7(CY#ln*>-pp67"r\KFE1l(hL'TJ&Z=ir7Mj%A]N6K&OmRaTi8Y.e'AVfL(
QdS.6A@k=h\OJBIldl'<B(OCJ9=t$_7K:\Bo@%tdcXq+tM(N/8%5/mrB4M$@&Hn!<>?i1DC-rk]OAP`$
)t&pj9hq1$.ItQDV;Rm^0Dn5@NS6#pRU5</2INVRGLZu3FY!G<;4qbhga1e@<C@'k]0i"i9p]B-;tK5P
JqI<IP)E(UhFY"i@*f1jojjDLm*K9H<VtI;.8ABpmoBc?AP:ter'3I6_eI-tmKeso1Srb?@`"G!KOlNX
&O=_[_>TCRk3m=e&e;>umT60lJm=&,3:<&?9@\VAIs8b91q.kXS\LZMAdnpU2[4EFh>81)5q^tuR/:<e
/<M.U7a\m+W&X'kbJFU,iDRhIKj3ag*GP`nKuj_k;Y<ZG6C6uTjt0.(K5/-:YWlLgjmR4dd"@kLIa*%@
lo2_%J73P:87+PlRE(-$>\KBl+3uo!G,tVp+M72Bs2-Zs`HT!tp,0#W];6*1TAWUA=gp]*#L`fZ,r<7S
UZgl.k)\9I^TWoOeu^E5Rib=-F1Ld3Rf`R\f-RCCE&8@J`cTs)\7O4B+`pf3fcO!lDU\:9%NcAo\MIhI
@DXddYd3pbbC"NXoP(oMcB__+Bp)ife(eN'b,9+L!a"-Fs"G7^qdA3Bb9K!MY#112>ENWaJ;YV<8%DlT
gTi:3e7#!ZK<7C.l:oI8Bb;-,eJ]2>*u')RFR6+hP06s*i_:N@"mC,c]W`GsYh-%QlZ>eUb4_3?QY0*N
4IL!g]Q0-e'JMt+,mnHC@#k>1(LXkjEH$Y6Nona#CJX.b$>f6(,W;=2bP;'af'i9/q_r?3^S]fZU*,t-
<)mbOR,m"#6J&s(6bn7g6DQ6(/HdF137rg['d/jujJX@\TI53]^2`AfX9A*acVl5`2o"[-Fm)jX(#ZC!
7<?ZIg\JH8'>(ZkE?F`K"h=_+ESUFr?^IPgQYOar]g^DBi-moVCYQf!G@@hAO*g/G7-!/&6bVgh[s>Xe
GMEOpNjlM?GGq.Y>*B*Q:aRgfBMUS.cZWu^].\irr*=Q0U4']_d;rU)pD`4uCKSpg7Ga[6Pa9S8*Ms!H
LMm0QrB_THQ#=8mmX2GW/BE7=calrcch61+45g0JX)b4@qGEIS%`<7HD1T6:[T,%-%hG(Wc6J\a%+pP3
G04G<<sNgh1s4_Z3*e39AloSM!<10Z8_^!hqi>gD8tN'j(*Ah]p=`<PNZY.'7iW4t`T8/c@6hJ,-iL\Z
F,slbT=.hH@>B9RD&NK=oCZPPQp/X!rh<31jT<Jk*`b`,V*Th[3%X`$K^PEhGLIa:a*UhaKAp=1X"MP`
HZ7Hg/bX:CIJqU0Ql82X$S[WLYh&<J&shYC3kE\5HS4fm%10b$i&cG9Vhk:icNQ-E%AZ"Id>*OQH,S5!
0Jtgq)/^2bDmHUVY2@Z1:T"=;LMt)%>'''UTo=8PZpmT5oK\?9/=%#VESujicd"M_P'qm!cR=5+75P1[
XY*cCfBjMr5!Rs/aol.1,2[YLT,KSa)r>GH3cs+fZ2@o&Je$mK;;?ncBL-O.VE"!>CPB;UIB"^`e()NI
+mpbAC6Z`qh5se=oPDJSEk@Tn'APGQI\p8>O4u!Cl21'l(Z(cC\IEp#!8t`gRKUpZIJT/`qTZn4@;YSG
3-s)fc9Q.\>RF!fkYHm]K%,,+$q6gii$k(9*-ZlF`sQrnV6S0C]QFm#Bd3t/@dht<PK/_P3b&\ujR2(Y
R[CQ0-B/<YP2oeF4>]32gRk``\6*>Q,C*$d@+c!B?;fu1-%8bO,F*_p(a>JI!`-NBq@?`pGRa~>
Q
0 J
1.45000 M
newpath
274.113 449.046 m
274.113 440.374 l
275.344 440.374 l
275.344 448.126 l
279.246 448.126 l
279.246 449.046 l
h
283.037 449.192 m
282.127 449.192 281.400 448.890 280.857 448.287  c
280.314 447.683 280.043 446.876 280.043 445.864  c
280.043 444.840 280.315 444.031 280.860 443.435  c
281.405 442.840 282.145 442.542 283.078 442.542  c
284.012 442.542 284.751 442.840 285.296 443.435  c
285.841 444.031 286.113 444.837 286.113 445.852  c
286.113 446.891 285.840 447.708 285.293 448.301  c
284.746 448.895 283.994 449.192 283.037 449.192  c
h
283.055 448.325 m
284.277 448.325 284.889 447.501 284.889 445.852  c
284.889 444.223 284.285 443.409 283.078 443.409  c
281.875 443.409 281.273 444.227 281.273 445.864  c
281.273 447.505 281.867 448.325 283.055 448.325  c
h
290.402 449.192 m
289.543 449.192 288.830 448.874 288.264 448.237  c
287.697 447.600 287.414 446.798 287.414 445.829  c
287.414 444.794 287.694 443.987 288.255 443.409  c
288.815 442.831 289.598 442.542 290.602 442.542  c
291.098 442.542 291.652 442.610 292.266 442.747  c
292.266 443.714 l
291.613 443.522 291.082 443.426 290.672 443.426  c
290.082 443.426 289.608 443.648 289.251 444.091  c
288.894 444.535 288.715 445.126 288.715 445.864  c
288.715 446.579 288.898 447.157 289.266 447.598  c
289.633 448.040 290.113 448.260 290.707 448.260  c
291.234 448.260 291.777 448.126 292.336 447.856  c
292.336 448.852 l
291.590 449.079 290.945 449.192 290.402 449.192  c
h
297.346 448.237 m
296.654 448.874 295.988 449.192 295.348 449.192  c
294.820 449.192 294.383 449.027 294.035 448.697  c
293.688 448.367 293.514 447.950 293.514 447.446  c
293.514 446.751 293.806 446.216 294.390 445.843  c
294.974 445.470 295.811 445.284 296.900 445.284  c
297.176 445.284 l
297.176 444.516 l
297.176 443.778 296.797 443.409 296.039 443.409  c
295.430 443.409 294.771 443.596 294.064 443.971  c
294.064 443.016 l
294.842 442.700 295.570 442.542 296.250 442.542  c
296.961 442.542 297.485 442.702 297.823 443.022  c
298.161 443.342 298.330 443.840 298.330 444.516  c
298.330 447.399 l
298.330 448.059 298.533 448.389 298.939 448.389  c
298.990 448.389 299.064 448.382 299.162 448.366  c
299.244 449.005 l
298.982 449.130 298.693 449.192 298.377 449.192  c
297.838 449.192 297.494 448.874 297.346 448.237  c
h
297.176 447.610 m
297.176 445.964 l
296.789 445.952 l
296.156 445.952 295.645 446.072 295.254 446.312  c
294.863 446.552 294.668 446.868 294.668 447.258  c
294.668 447.536 294.766 447.770 294.961 447.962  c
295.156 448.153 295.395 448.249 295.676 448.249  c
296.156 448.249 296.656 448.036 297.176 447.610  c
h
300.691 449.046 m
300.691 439.794 l
301.846 439.794 l
301.846 449.046 l
h
f
newpath
264.601 463.178 m
264.601 454.507 l
267.226 454.507 l
268.058 454.507 268.695 454.690 269.139 455.057  c
269.582 455.424 269.804 455.958 269.804 456.657  c
269.804 457.813 269.220 458.633 268.052 459.118  c
270.946 463.178 l
269.435 463.178 l
266.968 459.510 l
265.819 459.510 l
265.819 463.178 l
h
265.819 458.590 m
266.218 458.590 l
267.765 458.590 268.538 457.983 268.538 456.768  c
268.538 455.874 267.890 455.426 266.593 455.426  c
265.819 455.426 l
h
276.888 462.973 m
276.114 463.208 275.452 463.325 274.901 463.325  c
273.964 463.325 273.199 463.013 272.607 462.390  c
272.016 461.767 271.720 460.960 271.720 459.967  c
271.720 459.003 271.980 458.212 272.502 457.594  c
273.023 456.977 273.690 456.669 274.503 456.669  c
275.272 456.669 275.867 456.942 276.287 457.489  c
276.707 458.036 276.917 458.813 276.917 459.821  c
276.911 460.178 l
272.897 460.178 l
273.065 461.690 273.806 462.446 275.118 462.446  c
275.599 462.446 276.188 462.317 276.888 462.059  c
h
272.950 459.311 m
275.757 459.311 l
275.757 458.128 275.315 457.536 274.433 457.536  c
273.546 457.536 273.052 458.128 272.950 459.311  c
h
280.597 463.325 m
280.069 463.325 279.429 463.202 278.675 462.956  c
278.675 461.895 l
279.429 462.270 280.085 462.458 280.644 462.458  c
280.976 462.458 281.251 462.368 281.470 462.188  c
281.688 462.008 281.798 461.784 281.798 461.514  c
281.798 461.120 281.491 460.794 280.878 460.536  c
280.204 460.249 l
279.208 459.835 278.710 459.239 278.710 458.462  c
278.710 457.907 278.906 457.470 279.299 457.152  c
279.691 456.834 280.229 456.674 280.913 456.674  c
281.269 456.674 281.708 456.723 282.231 456.821  c
282.472 456.868 l
282.472 457.829 l
281.827 457.637 281.315 457.542 280.937 457.542  c
280.194 457.542 279.823 457.811 279.823 458.350  c
279.823 458.698 280.104 458.991 280.667 459.229  c
281.224 459.464 l
281.853 459.729 282.298 460.009 282.560 460.304  c
282.821 460.599 282.952 460.967 282.952 461.409  c
282.952 461.967 282.731 462.426 282.290 462.786  c
281.849 463.145 281.284 463.325 280.597 463.325  c
h
287.517 463.325 m
286.606 463.325 285.880 463.023 285.337 462.420  c
284.794 461.816 284.522 461.008 284.522 459.997  c
284.522 458.973 284.795 458.164 285.340 457.568  c
285.885 456.972 286.624 456.674 287.558 456.674  c
288.491 456.674 289.230 456.972 289.775 457.568  c
290.320 458.164 290.593 458.969 290.593 459.985  c
290.593 461.024 290.319 461.840 289.772 462.434  c
289.226 463.028 288.474 463.325 287.517 463.325  c
h
287.534 462.458 m
288.757 462.458 289.368 461.633 289.368 459.985  c
289.368 458.356 288.765 457.542 287.558 457.542  c
286.354 457.542 285.753 458.360 285.753 459.997  c
285.753 461.637 286.347 462.458 287.534 462.458  c
h
292.397 463.178 m
292.397 453.926 l
293.552 453.926 l
293.552 463.178 l
h
297.185 463.178 m
294.817 456.815 l
295.972 456.815 l
297.823 461.766 l
299.774 456.815 l
300.853 456.815 l
298.339 463.178 l
h
306.741 462.973 m
305.968 463.208 305.306 463.325 304.755 463.325  c
303.817 463.325 303.053 463.013 302.461 462.390  c
301.869 461.767 301.573 460.960 301.573 459.967  c
301.573 459.003 301.834 458.212 302.355 457.594  c
302.877 456.977 303.544 456.669 304.356 456.669  c
305.126 456.669 305.721 456.942 306.141 457.489  c
306.561 458.036 306.771 458.813 306.771 459.821  c
306.765 460.178 l
302.751 460.178 l
302.919 461.690 303.659 462.446 304.972 462.446  c
305.452 462.446 306.042 462.317 306.741 462.059  c
h
302.804 459.311 m
305.610 459.311 l
305.610 458.128 305.169 457.536 304.286 457.536  c
303.399 457.536 302.905 458.128 302.804 459.311  c
h
308.763 463.178 m
308.763 456.815 l
309.917 456.815 l
309.917 458.010 l
310.374 457.120 311.038 456.674 311.909 456.674  c
312.026 456.674 312.149 456.684 312.278 456.704  c
312.278 457.782 l
312.079 457.715 311.903 457.682 311.751 457.682  c
311.021 457.682 310.409 458.116 309.917 458.983  c
309.917 463.178 l
h
f
2 J
10.0000 M
q
[ 40.0000 0.00000 0.00000 47.0000 376.236 384.556 ] concat
<<
/ImageType 1
/Width 40  /Height 47
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [40 0 0 47 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
GauJ"M-!k^*XD1aCsJGj-Cm&c:7@bJ1=N%iACBPG9p=g5CuT!)VFG&igip^hMP(6bTVA*hJ>fQT5'Gdm
8!YMF+S^2*0%)_&9FNb"hYE^dn:Bc?IGB1aquG[J7q@[fi.St6k1THqqKTb1f!;RP656R6K^NjYG@u<\
EBL]Xh)EBF?aC^u*+p_@=iPSJj1AMs]i=7iPU7Z]7VomdOWiU)r:ei=OIKR.D;K20maXoB2&l(#ENE%P
rGcDHHjP;8(ja76QHf_q]/RaV01YA1C"=r9QHOpC^CM/7p)20Mkg+D;r^tSpUmkPRSLS8'[@d7:&WMB>
F/E5;ZtuS.'WHC]Z<6PJ:<fEce7Vsorm[`+hl3KhJ\AVs[O@dkTM,0O];HS^n(#PFH1maiNIcQ=s3JC)
182N0JqJLS(bu0(M<rai[dI3rUl8g\U0h!=0Q:mnS4bYj&ITF1B1@jW^"QH!ZoIK?<9(_@XO$^&>(PuO
a*qgR"Pl]beSR@q+q?:Y,]jo)^p8M_'[0s8lMr_SAe$+6/Lcu/8^kV)Q-g(UUe-MH/I.mT!`'U1AUNCq
H1+,'VeX%P^$)S*p9b2)]pjR]AS=bkO)&qdON<4bmumr[KYD38'=t%#er!W-8'Q)<SuS!kRo$qB1QfTq
QJl4SGKpL1>[YYU<kUcZ"7(CY#ln*>-pp67"r\KFE1l(hL'TJ&Z=ir7Mj%A]N6K&OmRaTi8Y.e'AVfL(
QdS.6A@k=h\OJBIldl'<B(OCJ9=t$_7K:\Bo@%tdcXq+tM(N/8%5/mrB4M$@&Hn!<>?i1DC-rk]OAP`$
)t&pj9hq1$.ItQDV;Rm^0Dn5@NS6#pRU5</2INVRGLZu3FY!G<;4qbhga1e@<C@'k]0i"i9p]B-;tK5P
JqI<IP)E(UhFY"i@*f1jojjDLm*K9H<VtI;.8ABpmoBc?AP:ter'3I6_eI-tmKeso1Srb?@`"G!KOlNX
&O=_[_>TCRk3m=e&e;>umT60lJm=&,3:<&?9@\VAIs8b91q.kXS\LZMAdnpU2[4EFh>81)5q^tuR/:<e
/<M.U7a\m+W&X'kbJFU,iDRhIKj3ag*GP`nKuj_k;Y<ZG6C6uTjt0.(K5/-:YWlLgjmR4dd"@kLIa*%@
lo2_%J73P:87+PlRE(-$>\KBl+3uo!G,tVp+M72Bs2-Zs`HT!tp,0#W];6*1TAWUA=gp]*#L`fZ,r<7S
UZgl.k)\9I^TWoOeu^E5Rib=-F1Ld3Rf`R\f-RCCE&8@J`cTs)\7O4B+`pf3fcO!lDU\:9%NcAo\MIhI
@DXddYd3pbbC"NXoP(oMcB__+Bp)ife(eN'b,9+L!a"-Fs"G7^qdA3Bb9K!MY#112>ENWaJ;YV<8%DlT
gTi:3e7#!ZK<7C.l:oI8Bb;-,eJ]2>*u')RFR6+hP06s*i_:N@"mC,c]W`GsYh-%QlZ>eUb4_3?QY0*N
4IL!g]Q0-e'JMt+,mnHC@#k>1(LXkjEH$Y6Nona#CJX.b$>f6(,W;=2bP;'af'i9/q_r?3^S]fZU*,t-
<)mbOR,m"#6J&s(6bn7g6DQ6(/HdF137rg['d/jujJX@\TI53]^2`AfX9A*acVl5`2o"[-Fm)jX(#ZC!
7<?ZIg\JH8'>(ZkE?F`K"h=_+ESUFr?^IPgQYOar]g^DBi-moVCYQf!G@@hAO*g/G7-!/&6bVgh[s>Xe
GMEOpNjlM?GGq.Y>*B*Q:aRgfBMUS.cZWu^].\irr*=Q0U4']_d;rU)pD`4uCKSpg7Ga[6Pa9S8*Ms!H
LMm0QrB_THQ#=8mmX2GW/BE7=calrcch61+45g0JX)b4@qGEIS%`<7HD1T6:[T,%-%hG(Wc6J\a%+pP3
G04G<<sNgh1s4_Z3*e39AloSM!<10Z8_^!hqi>gD8tN'j(*Ah]p=`<PNZY.'7iW4t`T8/c@6hJ,-iL\Z
F,slbT=.hH@>B9RD&NK=oCZPPQp/X!rh<31jT<Jk*`b`,V*Th[3%X`$K^PEhGLIa:a*UhaKAp=1X"MP`
HZ7Hg/bX:CIJqU0Ql82X$S[WLYh&<J&shYC3kE\5HS4fm%10b$i&cG9Vhk:icNQ-E%AZ"Id>*OQH,S5!
0Jtgq)/^2bDmHUVY2@Z1:T"=;LMt)%>'''UTo=8PZpmT5oK\?9/=%#VESujicd"M_P'qm!cR=5+75P1[
XY*cCfBjMr5!Rs/aol.1,2[YLT,KSa)r>GH3cs+fZ2@o&Je$mK;;?ncBL-O.VE"!>CPB;UIB"^`e()NI
+mpbAC6Z`qh5se=oPDJSEk@Tn'APGQI\p8>O4u!Cl21'l(Z(cC\IEp#!8t`gRKUpZIJT/`qTZn4@;YSG
3-s)fc9Q.\>RF!fkYHm]K%,,+$q6gii$k(9*-ZlF`sQrnV6S0C]QFm#Bd3t/@dht<PK/_P3b&\ujR2(Y
R[CQ0-B/<YP2oeF4>]32gRk``\6*>Q,C*$d@+c!B?;fu1-%8bO,F*_p(a>JI!`-NBq@?`pGRa~>
Q
0 J
1.45000 M
newpath
382.113 449.046 m
382.113 440.374 l
383.344 440.374 l
383.344 448.126 l
387.246 448.126 l
387.246 449.046 l
h
391.037 449.192 m
390.127 449.192 389.400 448.890 388.857 448.287  c
388.314 447.683 388.043 446.876 388.043 445.864  c
388.043 444.840 388.315 444.031 388.860 443.435  c
389.405 442.840 390.145 442.542 391.078 442.542  c
392.012 442.542 392.751 442.840 393.296 443.435  c
393.841 444.031 394.113 444.837 394.113 445.852  c
394.113 446.891 393.840 447.708 393.293 448.301  c
392.746 448.895 391.994 449.192 391.037 449.192  c
h
391.055 448.325 m
392.277 448.325 392.889 447.501 392.889 445.852  c
392.889 444.223 392.285 443.409 391.078 443.409  c
389.875 443.409 389.273 444.227 389.273 445.864  c
389.273 447.505 389.867 448.325 391.055 448.325  c
h
398.402 449.192 m
397.543 449.192 396.830 448.874 396.264 448.237  c
395.697 447.600 395.414 446.798 395.414 445.829  c
395.414 444.794 395.694 443.987 396.255 443.409  c
396.815 442.831 397.598 442.542 398.602 442.542  c
399.098 442.542 399.652 442.610 400.266 442.747  c
400.266 443.714 l
399.613 443.522 399.082 443.426 398.672 443.426  c
398.082 443.426 397.608 443.648 397.251 444.091  c
396.894 444.535 396.715 445.126 396.715 445.864  c
396.715 446.579 396.898 447.157 397.266 447.598  c
397.633 448.040 398.113 448.260 398.707 448.260  c
399.234 448.260 399.777 448.126 400.336 447.856  c
400.336 448.852 l
399.590 449.079 398.945 449.192 398.402 449.192  c
h
405.346 448.237 m
404.654 448.874 403.988 449.192 403.348 449.192  c
402.820 449.192 402.383 449.027 402.035 448.697  c
401.688 448.367 401.514 447.950 401.514 447.446  c
401.514 446.751 401.806 446.216 402.390 445.843  c
402.974 445.470 403.811 445.284 404.900 445.284  c
405.176 445.284 l
405.176 444.516 l
405.176 443.778 404.797 443.409 404.039 443.409  c
403.430 443.409 402.771 443.596 402.064 443.971  c
402.064 443.016 l
402.842 442.700 403.570 442.542 404.250 442.542  c
404.961 442.542 405.485 442.702 405.823 443.022  c
406.161 443.342 406.330 443.840 406.330 444.516  c
406.330 447.399 l
406.330 448.059 406.533 448.389 406.939 448.389  c
406.990 448.389 407.064 448.382 407.162 448.366  c
407.244 449.005 l
406.982 449.130 406.693 449.192 406.377 449.192  c
405.838 449.192 405.494 448.874 405.346 448.237  c
h
405.176 447.610 m
405.176 445.964 l
404.789 445.952 l
404.156 445.952 403.645 446.072 403.254 446.312  c
402.863 446.552 402.668 446.868 402.668 447.258  c
402.668 447.536 402.766 447.770 402.961 447.962  c
403.156 448.153 403.395 448.249 403.676 448.249  c
404.156 448.249 404.656 448.036 405.176 447.610  c
h
408.691 449.046 m
408.691 439.794 l
409.846 439.794 l
409.846 449.046 l
h
f
newpath
372.601 463.178 m
372.601 454.507 l
375.226 454.507 l
376.058 454.507 376.695 454.690 377.139 455.057  c
377.582 455.424 377.804 455.958 377.804 456.657  c
377.804 457.813 377.220 458.633 376.052 459.118  c
378.946 463.178 l
377.435 463.178 l
374.968 459.510 l
373.819 459.510 l
373.819 463.178 l
h
373.819 458.590 m
374.218 458.590 l
375.765 458.590 376.538 457.983 376.538 456.768  c
376.538 455.874 375.890 455.426 374.593 455.426  c
373.819 455.426 l
h
384.888 462.973 m
384.114 463.208 383.452 463.325 382.901 463.325  c
381.964 463.325 381.199 463.013 380.607 462.390  c
380.016 461.767 379.720 460.960 379.720 459.967  c
379.720 459.003 379.980 458.212 380.502 457.594  c
381.023 456.977 381.690 456.669 382.503 456.669  c
383.272 456.669 383.867 456.942 384.287 457.489  c
384.707 458.036 384.917 458.813 384.917 459.821  c
384.911 460.178 l
380.897 460.178 l
381.065 461.690 381.806 462.446 383.118 462.446  c
383.599 462.446 384.188 462.317 384.888 462.059  c
h
380.950 459.311 m
383.757 459.311 l
383.757 458.128 383.315 457.536 382.433 457.536  c
381.546 457.536 381.052 458.128 380.950 459.311  c
h
388.597 463.325 m
388.069 463.325 387.429 463.202 386.675 462.956  c
386.675 461.895 l
387.429 462.270 388.085 462.458 388.644 462.458  c
388.976 462.458 389.251 462.368 389.470 462.188  c
389.688 462.008 389.798 461.784 389.798 461.514  c
389.798 461.120 389.491 460.794 388.878 460.536  c
388.204 460.249 l
387.208 459.835 386.710 459.239 386.710 458.462  c
386.710 457.907 386.906 457.470 387.299 457.152  c
387.691 456.834 388.229 456.674 388.913 456.674  c
389.269 456.674 389.708 456.723 390.231 456.821  c
390.472 456.868 l
390.472 457.829 l
389.827 457.637 389.315 457.542 388.937 457.542  c
388.194 457.542 387.823 457.811 387.823 458.350  c
387.823 458.698 388.104 458.991 388.667 459.229  c
389.224 459.464 l
389.853 459.729 390.298 460.009 390.560 460.304  c
390.821 460.599 390.952 460.967 390.952 461.409  c
390.952 461.967 390.731 462.426 390.290 462.786  c
389.849 463.145 389.284 463.325 388.597 463.325  c
h
395.517 463.325 m
394.606 463.325 393.880 463.023 393.337 462.420  c
392.794 461.816 392.522 461.008 392.522 459.997  c
392.522 458.973 392.795 458.164 393.340 457.568  c
393.885 456.972 394.624 456.674 395.558 456.674  c
396.491 456.674 397.230 456.972 397.775 457.568  c
398.320 458.164 398.593 458.969 398.593 459.985  c
398.593 461.024 398.319 461.840 397.772 462.434  c
397.226 463.028 396.474 463.325 395.517 463.325  c
h
395.534 462.458 m
396.757 462.458 397.368 461.633 397.368 459.985  c
397.368 458.356 396.765 457.542 395.558 457.542  c
394.354 457.542 393.753 458.360 393.753 459.997  c
393.753 461.637 394.347 462.458 395.534 462.458  c
h
400.397 463.178 m
400.397 453.926 l
401.552 453.926 l
401.552 463.178 l
h
405.185 463.178 m
402.817 456.815 l
403.972 456.815 l
405.823 461.766 l
407.774 456.815 l
408.853 456.815 l
406.339 463.178 l
h
414.741 462.973 m
413.968 463.208 413.306 463.325 412.755 463.325  c
411.817 463.325 411.053 463.013 410.461 462.390  c
409.869 461.767 409.573 460.960 409.573 459.967  c
409.573 459.003 409.834 458.212 410.355 457.594  c
410.877 456.977 411.544 456.669 412.356 456.669  c
413.126 456.669 413.721 456.942 414.141 457.489  c
414.561 458.036 414.771 458.813 414.771 459.821  c
414.765 460.178 l
410.751 460.178 l
410.919 461.690 411.659 462.446 412.972 462.446  c
413.452 462.446 414.042 462.317 414.741 462.059  c
h
410.804 459.311 m
413.610 459.311 l
413.610 458.128 413.169 457.536 412.286 457.536  c
411.399 457.536 410.905 458.128 410.804 459.311  c
h
416.763 463.178 m
416.763 456.815 l
417.917 456.815 l
417.917 458.010 l
418.374 457.120 419.038 456.674 419.909 456.674  c
420.026 456.674 420.149 456.684 420.278 456.704  c
420.278 457.782 l
420.079 457.715 419.903 457.682 419.751 457.682  c
419.021 457.682 418.409 458.116 417.917 458.983  c
417.917 463.178 l
h
f
2 J
10.0000 M
6.00000 w
0 J
1.45000 M
newpath
307.749 408.000 m
376.221 408.000 l
S
1.00000 w
newpath
322.787 425.469 m
322.787 417.717 l
319.711 417.717 l
319.711 416.797 l
327.094 416.797 l
327.094 417.717 l
324.018 417.717 l
324.018 425.469 l
h
328.348 425.469 m
328.348 419.105 l
329.502 419.105 l
329.502 420.301 l
329.959 419.410 330.623 418.965 331.494 418.965  c
331.611 418.965 331.734 418.975 331.863 418.994  c
331.863 420.072 l
331.664 420.006 331.488 419.973 331.336 419.973  c
330.605 419.973 329.994 420.406 329.502 421.273  c
329.502 425.469 l
h
337.236 425.469 m
337.236 424.273 l
336.623 425.168 335.879 425.615 335.004 425.615  c
334.449 425.615 334.008 425.440 333.680 425.091  c
333.352 424.741 333.188 424.270 333.188 423.676  c
333.188 419.105 l
334.342 419.105 l
334.342 423.301 l
334.342 423.777 334.411 424.116 334.550 424.317  c
334.688 424.519 334.920 424.619 335.244 424.619  c
335.947 424.619 336.611 424.156 337.236 423.230  c
337.236 419.105 l
338.391 419.105 l
338.391 425.469 l
h
342.393 425.615 m
341.865 425.615 341.225 425.492 340.471 425.246  c
340.471 424.186 l
341.225 424.561 341.881 424.748 342.439 424.748  c
342.771 424.748 343.047 424.658 343.266 424.479  c
343.484 424.299 343.594 424.074 343.594 423.805  c
343.594 423.410 343.287 423.084 342.674 422.826  c
342.000 422.539 l
341.004 422.125 340.506 421.529 340.506 420.752  c
340.506 420.197 340.702 419.761 341.095 419.442  c
341.487 419.124 342.025 418.965 342.709 418.965  c
343.064 418.965 343.504 419.014 344.027 419.111  c
344.268 419.158 l
344.268 420.119 l
343.623 419.928 343.111 419.832 342.732 419.832  c
341.990 419.832 341.619 420.102 341.619 420.641  c
341.619 420.988 341.900 421.281 342.463 421.520  c
343.020 421.754 l
343.648 422.020 344.094 422.300 344.355 422.595  c
344.617 422.890 344.748 423.258 344.748 423.699  c
344.748 424.258 344.527 424.717 344.086 425.076  c
343.645 425.436 343.080 425.615 342.393 425.615  c
h
348.732 425.615 m
348.146 425.615 347.689 425.447 347.361 425.111  c
347.033 424.775 346.869 424.309 346.869 423.711  c
346.869 419.973 l
346.072 419.973 l
346.072 419.105 l
346.869 419.105 l
346.869 417.951 l
348.023 417.840 l
348.023 419.105 l
349.688 419.105 l
349.688 419.973 l
348.023 419.973 l
348.023 423.500 l
348.023 424.332 348.383 424.748 349.102 424.748  c
349.254 424.748 349.439 424.723 349.658 424.672  c
349.658 425.469 l
349.303 425.566 348.994 425.615 348.732 425.615  c
h
355.975 425.264 m
355.201 425.498 354.539 425.615 353.988 425.615  c
353.051 425.615 352.286 425.304 351.694 424.681  c
351.103 424.058 350.807 423.250 350.807 422.258  c
350.807 421.293 351.067 420.502 351.589 419.885  c
352.110 419.268 352.777 418.959 353.590 418.959  c
354.359 418.959 354.954 419.232 355.374 419.779  c
355.794 420.326 356.004 421.104 356.004 422.111  c
355.998 422.469 l
351.984 422.469 l
352.152 423.980 352.893 424.736 354.205 424.736  c
354.686 424.736 355.275 424.607 355.975 424.350  c
h
352.037 421.602 m
354.844 421.602 l
354.844 420.418 354.402 419.826 353.520 419.826  c
352.633 419.826 352.139 420.418 352.037 421.602  c
h
362.080 425.469 m
362.080 424.273 l
361.611 425.168 360.904 425.615 359.959 425.615  c
359.193 425.615 358.591 425.336 358.151 424.777  c
357.712 424.219 357.492 423.455 357.492 422.486  c
357.492 421.428 357.741 420.576 358.239 419.932  c
358.737 419.287 359.393 418.965 360.205 418.965  c
360.959 418.965 361.584 419.254 362.080 419.832  c
362.080 416.217 l
363.240 416.217 l
363.240 425.469 l
h
362.080 420.623 m
361.482 420.096 360.916 419.832 360.381 419.832  c
359.275 419.832 358.723 420.678 358.723 422.369  c
358.723 423.857 359.215 424.602 360.199 424.602  c
360.840 424.602 361.467 424.252 362.080 423.553  c
h
f
newpath
320.895 439.602 m
320.895 431.850 l
317.818 431.850 l
317.818 430.930 l
325.201 430.930 l
325.201 431.850 l
322.125 431.850 l
322.125 439.602 l
h
326.420 439.602 m
326.420 430.930 l
327.650 430.930 l
327.650 438.682 l
331.553 438.682 l
331.553 439.602 l
h
334.518 439.818 m
333.936 439.818 333.191 439.691 332.285 439.438  c
332.285 438.219 l
333.262 438.672 334.064 438.898 334.693 438.898  c
335.178 438.898 335.567 438.771 335.862 438.518  c
336.157 438.264 336.305 437.930 336.305 437.516  c
336.305 437.176 336.208 436.887 336.015 436.648  c
335.821 436.410 335.465 436.145 334.945 435.852  c
334.348 435.506 l
333.609 435.084 333.089 434.687 332.786 434.313  c
332.483 433.940 332.332 433.506 332.332 433.010  c
332.332 432.342 332.574 431.792 333.059 431.360  c
333.543 430.929 334.160 430.713 334.910 430.713  c
335.578 430.713 336.283 430.824 337.025 431.047  c
337.025 432.172 l
336.111 431.812 335.430 431.633 334.980 431.633  c
334.555 431.633 334.203 431.746 333.926 431.973  c
333.648 432.199 333.510 432.484 333.510 432.828  c
333.510 433.117 333.611 433.373 333.814 433.596  c
334.018 433.818 334.389 434.084 334.928 434.393  c
335.549 434.744 l
336.299 435.170 336.822 435.572 337.119 435.951  c
337.416 436.330 337.564 436.785 337.564 437.316  c
337.564 438.070 337.286 438.676 336.729 439.133  c
336.173 439.590 335.436 439.818 334.518 439.818  c
h
343.078 439.602 m
343.078 430.930 l
344.309 430.930 l
344.309 438.682 l
348.211 438.682 l
348.211 439.602 l
h
349.512 439.602 m
349.512 433.238 l
350.666 433.238 l
350.666 439.602 l
h
349.512 432.084 m
349.512 430.930 l
350.666 430.930 l
350.666 432.084 l
h
352.980 439.602 m
352.980 433.238 l
354.135 433.238 l
354.135 434.434 l
354.744 433.543 355.490 433.098 356.373 433.098  c
356.924 433.098 357.363 433.272 357.691 433.622  c
358.020 433.972 358.184 434.441 358.184 435.031  c
358.184 439.602 l
357.029 439.602 l
357.029 435.406 l
357.029 434.934 356.960 434.597 356.821 434.396  c
356.683 434.194 356.453 434.094 356.133 434.094  c
355.426 434.094 354.760 434.557 354.135 435.482  c
354.135 439.602 l
h
360.428 439.602 m
360.428 430.350 l
361.582 430.350 l
361.582 436.326 l
364.277 433.238 l
365.520 433.238 l
362.947 436.209 l
366.053 439.602 l
364.576 439.602 l
361.582 436.338 l
361.582 439.602 l
h
f
6.00000 w
1.00000 w
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
