%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 345 300
%%Creator: yExport 1.4.0.1
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, May 7, 2015 12:37:32 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
345 300 setpagesize
0 0 0 0 setmargins
0 0 setorigin
345 300 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
345.000 0.00000 l
345.000 300.000 l
0.00000 300.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 345 300 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -204.000 -191.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
204.000 191.000 m
549.000 191.000 l
549.000 491.000 l
204.000 491.000 l
204.000 191.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -204.000 -191.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -204.000 -191.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -204.000 -191.000 ] defaultmatrix matrix concatmatrix setmatrix
q
[ 40.0000 0.00000 0.00000 48.0000 300.375 391.928 ] concat
<<
/ImageType 1
/Width 40  /Height 48
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [40 0 0 48 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
GauI778GI-(l!M`)\No;#V-0+YTQ2_LB,.XE"0VfG8]2lh;-n0(;RIVk.>^^_q[9.LH`0_SY#-3mj\(t
ICnXn0AGUaq>'sdI"-WqH$O[]H?s[T[&9h"USFT`WN!J?]!AWI]Y(na['ZX)Uo:5jWiCrFqYL'Nk%:'A
N/Z!+c>IH7>[C`cI!khsiSX5%q0@I>%u=<`qtn";]/r)9!O]>C)3%)e2E!H+\[Js?41ClU+?r(T0/"t+
-RUDp.jH8`/M/P#,pbQ33Ai\%Ycs3c#6tLkqnUQjAnHdQLBe%hJbJg2lGZIi8kMcNN/s$\NK'ctWDMf6
LPOpMj36TAk!hj27n#kS\$lGsR7rS3s5Z'p1q^K6!$sBgP36b)GtM2u1JD\Bgsss*f@Mr<1c.'I-/#=8
QhuYt$K<j,M%#`CcHa^gAUqXoIWBIlP[7Ho=B\m;'6,fe2b/@bNIcW]?>47nD/!]m6SW*!'5jUaFHm^_
)]OF8ZEgdL]tLna\%0&[]"1KR\3-L:]=Y\-K7fAOPIJ"[r>2DO(Ddm5OZg4^[C*WYb:Yb<5!D+m]stS^
]"5J`\[fDeA`#X54?PekEkODu]=U-GZ#//:1d3r]&h\/@!aD-#p[IZk0Gh5O/hV$ZDI-XUXLl;VTM'BF
D/BaA^:C3*;La+C9f(KjA>32!o^qdc\@AcI0OJ0oS(s[0+I7j1.k<,[*LT0iPg!b`R%jEPH+L\qZbn3T
$lb9IqSk?I5Kj`\B"__,GS_AF!HN7&;%NP/It)rg_^:_hA_3-'%"T.["JAF^9Me<aGl#Hc5<hAq:d(-b
+<P^adQeJ4l.(J,*ZhJ@bKB+e%1*?W6.Bs)/?r6YO,o>:2`NcV4$-Y0QXgjt:s\h,oYfXdEHQE3j<AT4
\EkmA>co7PZm6u>bG2kg5e,T_ij,Q6E$HPN&eYgRrf`NZR\BZ7o--6tM<5P/>hct"mU2Y;]1KMg+n+"3
eDM74"hl+F6jJO#aQ!ZL33pbI'L.c%C^g]r_C<#F/ub'9F!6>J&;S,f/H#i&is!9b$g+2Y;-dHJWPue2
?G]nB&\A-"7gW%)XscCkBHn_3Bi/QM^:oWr+Qgm+2(0ipCul&a7t`2[)8"uo,0.Wgl'2MsTcf45&-nOf
n1F%cfj+;si6"ibIRJ,=.a`3,XP_>&Ab_CMOVek57JH!qb"i.,Ob?+<W,Q+f7CYIS!BAdhFr#mf<j*GL
Qeb&UW6&\TJ>iL)?<M=E6rD:,;D0Y$Xe&08lG^^be8tFW"'rG'5ttVT:_tbA4IWd-7]PO43HhogO!ZLP
C:O$Z7hoPj1c1Gh2S"2_X63APC>%PM"9bBl5g^YV'5aO.bq_(2Z&G';(kmm6C>ttpQJCKZ@Y.tsE^&K?
@O"1s`/iuc:cTUpa]SW"+9Fd,j:N:_[`(:Z`c_C)(G+i$QGi-pG.9$%M`W?M,=]V7M'!<@fsEj`nKPjo
XE)*hYV]DYLf)W!%W8p*#:MUCa;Kj9.d&%b"4K[Y@TrU?YE2pE&4a(t,A%I%i$p@cD(ZY:2+q;1Ahr>P
AAYgi$LKQl.mIK&F9#$SFECLU&K-;Y1G2flbOZ>>pKKkFo(;Rm,M_7i+#,cjr.poeCp9A@_D'<]cK&*'
5X>\Jp%;<NM];6_"H378LTL.jkQ\$-)R1)\9pPN*h^To=:\78hU^GeOM+d:$_Bi8@ECkUb\82CE>S7.4
q`0uK>.JJ:T6'g%Ps59!F3tab>_GNlQi:d[,&R[<9eIA&CS1^KPM^D?7\_:_l:3a9EA8Kbli$cfq2:E\
Y+1YkEm\3q>c%e0_-eD+n/[b6rnk&#Df;ST*&-K<M1Ti*AUH`BY+#e3]jWPW)q'U7U8oW)aX6!hAj)-B
~>
Q
0 J
1.45000 M
newpath
306.113 457.143 m
306.113 448.471 l
307.344 448.471 l
307.344 456.223 l
311.246 456.223 l
311.246 457.143 l
h
315.037 457.289 m
314.127 457.289 313.400 456.987 312.857 456.384  c
312.314 455.780 312.043 454.973 312.043 453.961  c
312.043 452.937 312.315 452.128 312.860 451.532  c
313.405 450.936 314.145 450.639 315.078 450.639  c
316.012 450.639 316.751 450.936 317.296 451.532  c
317.841 452.128 318.113 452.934 318.113 453.949  c
318.113 454.988 317.840 455.805 317.293 456.398  c
316.746 456.992 315.994 457.289 315.037 457.289  c
h
315.055 456.422 m
316.277 456.422 316.889 455.598 316.889 453.949  c
316.889 452.320 316.285 451.506 315.078 451.506  c
313.875 451.506 313.273 452.324 313.273 453.961  c
313.273 455.602 313.867 456.422 315.055 456.422  c
h
322.402 457.289 m
321.543 457.289 320.830 456.971 320.264 456.334  c
319.697 455.697 319.414 454.895 319.414 453.926  c
319.414 452.891 319.694 452.084 320.255 451.506  c
320.815 450.928 321.598 450.639 322.602 450.639  c
323.098 450.639 323.652 450.707 324.266 450.844  c
324.266 451.811 l
323.613 451.619 323.082 451.523 322.672 451.523  c
322.082 451.523 321.608 451.745 321.251 452.188  c
320.894 452.632 320.715 453.223 320.715 453.961  c
320.715 454.676 320.898 455.254 321.266 455.695  c
321.633 456.137 322.113 456.357 322.707 456.357  c
323.234 456.357 323.777 456.223 324.336 455.953  c
324.336 456.949 l
323.590 457.176 322.945 457.289 322.402 457.289  c
h
329.346 456.334 m
328.654 456.971 327.988 457.289 327.348 457.289  c
326.820 457.289 326.383 457.124 326.035 456.794  c
325.688 456.464 325.514 456.047 325.514 455.543  c
325.514 454.848 325.806 454.313 326.390 453.940  c
326.974 453.567 327.811 453.381 328.900 453.381  c
329.176 453.381 l
329.176 452.613 l
329.176 451.875 328.797 451.506 328.039 451.506  c
327.430 451.506 326.771 451.693 326.064 452.068  c
326.064 451.113 l
326.842 450.797 327.570 450.639 328.250 450.639  c
328.961 450.639 329.485 450.799 329.823 451.119  c
330.161 451.439 330.330 451.937 330.330 452.613  c
330.330 455.496 l
330.330 456.156 330.533 456.486 330.939 456.486  c
330.990 456.486 331.064 456.478 331.162 456.463  c
331.244 457.102 l
330.982 457.227 330.693 457.289 330.377 457.289  c
329.838 457.289 329.494 456.971 329.346 456.334  c
h
329.176 455.707 m
329.176 454.061 l
328.789 454.049 l
328.156 454.049 327.645 454.169 327.254 454.409  c
326.863 454.649 326.668 454.965 326.668 455.355  c
326.668 455.633 326.766 455.867 326.961 456.059  c
327.156 456.250 327.395 456.346 327.676 456.346  c
328.156 456.346 328.656 456.133 329.176 455.707  c
h
332.691 457.143 m
332.691 447.891 l
333.846 447.891 l
333.846 457.143 l
h
f
newpath
296.601 471.275 m
296.601 462.603 l
299.226 462.603 l
300.058 462.603 300.695 462.787 301.139 463.154  c
301.582 463.521 301.804 464.055 301.804 464.754  c
301.804 465.910 301.220 466.730 300.052 467.215  c
302.946 471.275 l
301.435 471.275 l
298.968 467.607 l
297.819 467.607 l
297.819 471.275 l
h
297.819 466.687 m
298.218 466.687 l
299.765 466.687 300.538 466.080 300.538 464.865  c
300.538 463.971 299.890 463.523 298.593 463.523  c
297.819 463.523 l
h
308.888 471.070 m
308.114 471.305 307.452 471.422 306.901 471.422  c
305.964 471.422 305.199 471.110 304.607 470.487  c
304.016 469.864 303.720 469.057 303.720 468.064  c
303.720 467.100 303.980 466.309 304.502 465.691  c
305.023 465.074 305.690 464.766 306.503 464.766  c
307.272 464.766 307.867 465.039 308.287 465.586  c
308.707 466.133 308.917 466.910 308.917 467.918  c
308.911 468.275 l
304.897 468.275 l
305.065 469.787 305.806 470.543 307.118 470.543  c
307.599 470.543 308.188 470.414 308.888 470.156  c
h
304.950 467.408 m
307.757 467.408 l
307.757 466.225 307.315 465.633 306.433 465.633  c
305.546 465.633 305.052 466.225 304.950 467.408  c
h
312.597 471.422 m
312.069 471.422 311.429 471.299 310.675 471.053  c
310.675 469.992 l
311.429 470.367 312.085 470.555 312.644 470.555  c
312.976 470.555 313.251 470.465 313.470 470.285  c
313.688 470.105 313.798 469.881 313.798 469.611  c
313.798 469.217 313.491 468.891 312.878 468.633  c
312.204 468.346 l
311.208 467.932 310.710 467.336 310.710 466.559  c
310.710 466.004 310.906 465.567 311.299 465.249  c
311.691 464.931 312.229 464.771 312.913 464.771  c
313.269 464.771 313.708 464.820 314.231 464.918  c
314.472 464.965 l
314.472 465.926 l
313.827 465.734 313.315 465.639 312.937 465.639  c
312.194 465.639 311.823 465.908 311.823 466.447  c
311.823 466.795 312.104 467.088 312.667 467.326  c
313.224 467.561 l
313.853 467.826 314.298 468.106 314.560 468.401  c
314.821 468.696 314.952 469.064 314.952 469.506  c
314.952 470.064 314.731 470.523 314.290 470.883  c
313.849 471.242 313.284 471.422 312.597 471.422  c
h
319.517 471.422 m
318.606 471.422 317.880 471.120 317.337 470.517  c
316.794 469.913 316.522 469.105 316.522 468.094  c
316.522 467.070 316.795 466.261 317.340 465.665  c
317.885 465.069 318.624 464.771 319.558 464.771  c
320.491 464.771 321.230 465.069 321.775 465.665  c
322.320 466.261 322.593 467.066 322.593 468.082  c
322.593 469.121 322.319 469.937 321.772 470.531  c
321.226 471.125 320.474 471.422 319.517 471.422  c
h
319.534 470.555 m
320.757 470.555 321.368 469.730 321.368 468.082  c
321.368 466.453 320.765 465.639 319.558 465.639  c
318.354 465.639 317.753 466.457 317.753 468.094  c
317.753 469.734 318.347 470.555 319.534 470.555  c
h
324.397 471.275 m
324.397 462.023 l
325.552 462.023 l
325.552 471.275 l
h
329.185 471.275 m
326.817 464.912 l
327.972 464.912 l
329.823 469.863 l
331.774 464.912 l
332.853 464.912 l
330.339 471.275 l
h
338.741 471.070 m
337.968 471.305 337.306 471.422 336.755 471.422  c
335.817 471.422 335.053 471.110 334.461 470.487  c
333.869 469.864 333.573 469.057 333.573 468.064  c
333.573 467.100 333.834 466.309 334.355 465.691  c
334.877 465.074 335.544 464.766 336.356 464.766  c
337.126 464.766 337.721 465.039 338.141 465.586  c
338.561 466.133 338.771 466.910 338.771 467.918  c
338.765 468.275 l
334.751 468.275 l
334.919 469.787 335.659 470.543 336.972 470.543  c
337.452 470.543 338.042 470.414 338.741 470.156  c
h
334.804 467.408 m
337.610 467.408 l
337.610 466.225 337.169 465.633 336.286 465.633  c
335.399 465.633 334.905 466.225 334.804 467.408  c
h
340.763 471.275 m
340.763 464.912 l
341.917 464.912 l
341.917 466.107 l
342.374 465.217 343.038 464.771 343.909 464.771  c
344.026 464.771 344.149 464.781 344.278 464.801  c
344.278 465.879 l
344.079 465.812 343.903 465.779 343.751 465.779  c
343.021 465.779 342.409 466.213 341.917 467.080  c
341.917 471.275 l
h
f
2 J
10.0000 M
q
[ 17.0000 0.00000 0.00000 26.0000 415.809 402.840 ] concat
<<
/ImageType 1
/Width 17  /Height 26
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [17 0 0 26 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gat=habj8!&;K'q+@NPU,Ie:NS3^$,G+N?+MAYC#Xf,)!"q_T?k`pb>iJI,F08NI=P-.5NpR_6IYN_S;
nT[#5IL:\3g[-ngc"aZ_rjrRCK>h<ip@bq$YHunu3h>\\3p6,1F?5!,DRZ/0HG+6KE7A\^lh1,GoCJ$j
a6EMS#cUcQ0/"u<7K]8`X&Z4N4q!Osjj7^-*"I`WUA%)6,,AHrj$kG+!i]5$U-Bh_,SCEqh-TNk^CEJ6
+I=qa!\kUQ>-7MS&@.a"Vj#554<>#g_eus\71_eN8u6"%8;*n=VeZS:+oZ:96]X\]$sJ4AF"A)"-BmD-
f^&4e5VQk87s#8SVpbr@1`E2fO\!D@a?rK^TC;OO&/"s8op&_9DYKbG"NM1(!so)3nTZ%%%j<7iH'fF5
)>u_Z*T[qM2`,Ch#(rUG-j5/gMoF]Mq\dN[6>?JC_LO`i&$u.W(*GN)NBsn7"D=?F=@hJD"UNAh!!jeg
Ea]9.6=S!<kAh#?&B*Wr6,_?2/E0nU6=@j%:O:)q39:\20UYToZNJi@SaIDjd:e>]%A?j(X&Yuol1KA!
;Q3]tAMTZA,.Tu.kJ!Ug#WdjcA26!gCc9a!9"Tii-^@;t.0gt"*@<;I>YY>-L#O6`$]0T>"#r2=^d<>X
=ia`V+XIPr<(b7HHdB"Tms4?`o/Sn]DR[1Lip4P-"mGRR*.k\*/iI7N>iPPe)]IS\~>
Q
0 J
1.45000 M
newpath
439.123 420.033 m
439.123 418.955 l
439.952 419.283 440.604 419.447 441.080 419.447  c
441.631 419.447 442.079 419.286 442.425 418.964  c
442.771 418.642 442.944 418.225 442.944 417.713  c
442.944 416.494 442.090 415.885 440.383 415.885  c
439.926 415.885 l
439.926 415.106 l
440.330 415.100 l
441.932 415.100 442.733 414.535 442.733 413.406  c
442.733 412.520 442.205 412.076 441.151 412.076  c
440.573 412.076 439.936 412.238 439.241 412.563  c
439.241 411.555 l
439.924 411.324 440.588 411.209 441.233 411.209  c
443.006 411.209 443.893 411.879 443.893 413.219  c
443.893 414.238 443.289 414.965 442.082 415.398  c
443.481 415.723 444.180 416.488 444.180 417.695  c
444.180 418.512 443.911 419.152 443.371 419.617  c
442.832 420.082 442.092 420.315 441.151 420.315  c
440.616 420.315 439.940 420.221 439.123 420.033  c
h
445.926 421.035 m
445.926 421.832 l
446.770 421.258 447.439 420.478 447.933 419.491  c
448.427 418.505 448.674 417.453 448.674 416.336  c
448.674 415.223 448.427 414.173 447.933 413.187  c
447.439 412.200 446.770 411.420 445.926 410.846  c
445.926 411.643 l
446.500 412.268 446.910 412.940 447.154 413.658  c
447.398 414.377 447.520 415.270 447.520 416.336  c
447.520 417.406 447.398 418.301 447.154 419.020  c
446.910 419.738 446.500 420.410 445.926 421.035  c
h
459.010 419.893 m
458.237 420.127 457.575 420.244 457.024 420.244  c
456.086 420.244 455.322 419.933 454.730 419.310  c
454.138 418.687 453.842 417.879 453.842 416.887  c
453.842 415.922 454.103 415.131 454.624 414.514  c
455.146 413.897 455.813 413.588 456.625 413.588  c
457.395 413.588 457.990 413.861 458.410 414.408  c
458.829 414.955 459.039 415.732 459.039 416.740  c
459.034 417.098 l
455.020 417.098 l
455.188 418.609 455.928 419.365 457.241 419.365  c
457.721 419.365 458.311 419.236 459.010 418.979  c
h
455.073 416.231 m
457.879 416.231 l
457.879 415.047 457.438 414.455 456.555 414.455  c
455.668 414.455 455.174 415.047 455.073 416.231  c
h
460.393 420.098 m
462.813 416.811 l
460.463 413.734 l
461.834 413.734 l
463.692 416.184 l
465.373 413.734 l
466.498 413.734 l
464.295 416.963 l
466.692 420.098 l
465.321 420.098 l
463.405 417.578 l
461.553 420.098 l
h
471.672 419.289 m
470.981 419.926 470.315 420.244 469.674 420.244  c
469.147 420.244 468.709 420.079 468.362 419.749  c
468.014 419.419 467.840 419.002 467.840 418.498  c
467.840 417.803 468.132 417.269 468.716 416.896  c
469.300 416.523 470.137 416.336 471.227 416.336  c
471.502 416.336 l
471.502 415.568 l
471.502 414.830 471.123 414.461 470.366 414.461  c
469.756 414.461 469.098 414.648 468.391 415.023  c
468.391 414.068 l
469.168 413.752 469.897 413.594 470.577 413.594  c
471.288 413.594 471.812 413.754 472.150 414.074  c
472.488 414.395 472.657 414.893 472.657 415.568  c
472.657 418.451 l
472.657 419.111 472.860 419.441 473.266 419.441  c
473.317 419.441 473.391 419.434 473.489 419.418  c
473.571 420.057 l
473.309 420.182 473.020 420.244 472.704 420.244  c
472.164 420.244 471.821 419.926 471.672 419.289  c
h
471.502 418.662 m
471.502 417.016 l
471.116 417.004 l
470.483 417.004 469.971 417.124 469.580 417.364  c
469.190 417.605 468.995 417.920 468.995 418.311  c
468.995 418.588 469.092 418.822 469.288 419.014  c
469.483 419.205 469.721 419.301 470.002 419.301  c
470.483 419.301 470.983 419.088 471.502 418.662  c
h
475.018 420.098 m
475.018 413.734 l
476.172 413.734 l
476.172 414.930 l
476.735 414.039 477.457 413.594 478.340 413.594  c
479.192 413.594 479.772 414.039 480.080 414.930  c
480.627 414.035 481.338 413.588 482.213 413.588  c
482.776 413.588 483.211 413.753 483.520 414.083  c
483.829 414.413 483.983 414.875 483.983 415.469  c
483.983 420.098 l
482.823 420.098 l
482.823 415.650 l
482.823 414.924 482.536 414.561 481.961 414.561  c
481.364 414.561 480.737 414.984 480.080 415.832  c
480.080 420.098 l
478.920 420.098 l
478.920 415.650 l
478.920 414.920 478.627 414.555 478.041 414.555  c
477.459 414.555 476.836 414.981 476.172 415.832  c
476.172 420.098 l
h
486.221 422.412 m
486.221 413.734 l
487.375 413.734 l
487.375 414.930 l
487.848 414.039 488.557 413.594 489.502 413.594  c
490.268 413.594 490.871 413.873 491.310 414.432  c
491.749 414.990 491.969 415.754 491.969 416.723  c
491.969 417.777 491.720 418.628 491.222 419.274  c
490.724 419.921 490.069 420.244 489.256 420.244  c
488.502 420.244 487.875 419.955 487.375 419.377  c
487.375 422.412 l
h
487.375 418.580 m
487.969 419.111 488.536 419.377 489.075 419.377  c
490.184 419.377 490.739 418.531 490.739 416.840  c
490.739 415.348 490.246 414.602 489.262 414.602  c
488.618 414.602 487.989 414.951 487.375 415.650  c
h
493.774 420.098 m
493.774 410.846 l
494.928 410.846 l
494.928 420.098 l
h
501.907 419.893 m
501.133 420.127 500.471 420.244 499.920 420.244  c
498.983 420.244 498.218 419.933 497.626 419.310  c
497.035 418.687 496.739 417.879 496.739 416.887  c
496.739 415.922 496.999 415.131 497.521 414.514  c
498.042 413.897 498.709 413.588 499.522 413.588  c
500.291 413.588 500.886 413.861 501.306 414.408  c
501.726 414.955 501.936 415.732 501.936 416.740  c
501.930 417.098 l
497.916 417.098 l
498.084 418.609 498.825 419.365 500.137 419.365  c
500.618 419.365 501.207 419.236 501.907 418.979  c
h
497.969 416.231 m
500.776 416.231 l
500.776 415.047 500.334 414.455 499.452 414.455  c
498.565 414.455 498.071 415.047 497.969 416.231  c
h
503.946 420.098 m
503.946 418.650 l
505.393 418.650 l
505.393 420.098 l
h
510.209 420.244 m
509.350 420.244 508.637 419.926 508.071 419.289  c
507.504 418.652 507.221 417.850 507.221 416.881  c
507.221 415.846 507.501 415.039 508.062 414.461  c
508.622 413.883 509.405 413.594 510.409 413.594  c
510.905 413.594 511.459 413.662 512.073 413.799  c
512.073 414.766 l
511.420 414.574 510.889 414.479 510.479 414.479  c
509.889 414.479 509.415 414.700 509.058 415.144  c
508.701 415.587 508.522 416.178 508.522 416.916  c
508.522 417.631 508.705 418.209 509.073 418.650  c
509.440 419.092 509.920 419.313 510.514 419.313  c
511.041 419.313 511.584 419.178 512.143 418.908  c
512.143 419.904 l
511.397 420.131 510.752 420.244 510.209 420.244  c
h
516.362 420.244 m
515.452 420.244 514.725 419.942 514.182 419.339  c
513.639 418.735 513.368 417.928 513.368 416.916  c
513.368 415.893 513.640 415.083 514.185 414.487  c
514.730 413.892 515.469 413.594 516.403 413.594  c
517.336 413.594 518.076 413.892 518.620 414.487  c
519.165 415.083 519.438 415.889 519.438 416.904  c
519.438 417.943 519.164 418.760 518.618 419.354  c
518.071 419.947 517.319 420.244 516.362 420.244  c
h
516.379 419.377 m
517.602 419.377 518.213 418.553 518.213 416.904  c
518.213 415.275 517.610 414.461 516.403 414.461  c
515.200 414.461 514.598 415.279 514.598 416.916  c
514.598 418.557 515.192 419.377 516.379 419.377  c
h
521.243 420.098 m
521.243 413.734 l
522.397 413.734 l
522.397 414.930 l
522.959 414.039 523.682 413.594 524.565 413.594  c
525.416 413.594 525.996 414.039 526.305 414.930  c
526.852 414.035 527.563 413.588 528.438 413.588  c
529.000 413.588 529.436 413.753 529.745 414.083  c
530.053 414.413 530.207 414.875 530.207 415.469  c
530.207 420.098 l
529.047 420.098 l
529.047 415.650 l
529.047 414.924 528.760 414.561 528.186 414.561  c
527.588 414.561 526.961 414.984 526.305 415.832  c
526.305 420.098 l
525.145 420.098 l
525.145 415.650 l
525.145 414.920 524.852 414.555 524.266 414.555  c
523.684 414.555 523.061 414.981 522.397 415.832  c
522.397 420.098 l
h
f
2 J
10.0000 M
q
[ 40.0000 0.00000 0.00000 47.0000 300.236 242.986 ] concat
<<
/ImageType 1
/Width 40  /Height 47
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [40 0 0 47 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
GauJ"M-!k^*XD1aCsJGj-Cm&c:7@bJ1=N%iACBPG9p=g5CuT!)VFG&igip^hMP(6bTVA*hJ>fQT5'Gdm
8!YMF+S^2*0%)_&9FNb"hYE^dn:Bc?IGB1aquG[J7q@[fi.St6k1THqqKTb1f!;RP656R6K^NjYG@u<\
EBL]Xh)EBF?aC^u*+p_@=iPSJj1AMs]i=7iPU7Z]7VomdOWiU)r:ei=OIKR.D;K20maXoB2&l(#ENE%P
rGcDHHjP;8(ja76QHf_q]/RaV01YA1C"=r9QHOpC^CM/7p)20Mkg+D;r^tSpUmkPRSLS8'[@d7:&WMB>
F/E5;ZtuS.'WHC]Z<6PJ:<fEce7Vsorm[`+hl3KhJ\AVs[O@dkTM,0O];HS^n(#PFH1maiNIcQ=s3JC)
182N0JqJLS(bu0(M<rai[dI3rUl8g\U0h!=0Q:mnS4bYj&ITF1B1@jW^"QH!ZoIK?<9(_@XO$^&>(PuO
a*qgR"Pl]beSR@q+q?:Y,]jo)^p8M_'[0s8lMr_SAe$+6/Lcu/8^kV)Q-g(UUe-MH/I.mT!`'U1AUNCq
H1+,'VeX%P^$)S*p9b2)]pjR]AS=bkO)&qdON<4bmumr[KYD38'=t%#er!W-8'Q)<SuS!kRo$qB1QfTq
QJl4SGKpL1>[YYU<kUcZ"7(CY#ln*>-pp67"r\KFE1l(hL'TJ&Z=ir7Mj%A]N6K&OmRaTi8Y.e'AVfL(
QdS.6A@k=h\OJBIldl'<B(OCJ9=t$_7K:\Bo@%tdcXq+tM(N/8%5/mrB4M$@&Hn!<>?i1DC-rk]OAP`$
)t&pj9hq1$.ItQDV;Rm^0Dn5@NS6#pRU5</2INVRGLZu3FY!G<;4qbhga1e@<C@'k]0i"i9p]B-;tK5P
JqI<IP)E(UhFY"i@*f1jojjDLm*K9H<VtI;.8ABpmoBc?AP:ter'3I6_eI-tmKeso1Srb?@`"G!KOlNX
&O=_[_>TCRk3m=e&e;>umT60lJm=&,3:<&?9@\VAIs8b91q.kXS\LZMAdnpU2[4EFh>81)5q^tuR/:<e
/<M.U7a\m+W&X'kbJFU,iDRhIKj3ag*GP`nKuj_k;Y<ZG6C6uTjt0.(K5/-:YWlLgjmR4dd"@kLIa*%@
lo2_%J73P:87+PlRE(-$>\KBl+3uo!G,tVp+M72Bs2-Zs`HT!tp,0#W];6*1TAWUA=gp]*#L`fZ,r<7S
UZgl.k)\9I^TWoOeu^E5Rib=-F1Ld3Rf`R\f-RCCE&8@J`cTs)\7O4B+`pf3fcO!lDU\:9%NcAo\MIhI
@DXddYd3pbbC"NXoP(oMcB__+Bp)ife(eN'b,9+L!a"-Fs"G7^qdA3Bb9K!MY#112>ENWaJ;YV<8%DlT
gTi:3e7#!ZK<7C.l:oI8Bb;-,eJ]2>*u')RFR6+hP06s*i_:N@"mC,c]W`GsYh-%QlZ>eUb4_3?QY0*N
4IL!g]Q0-e'JMt+,mnHC@#k>1(LXkjEH$Y6Nona#CJX.b$>f6(,W;=2bP;'af'i9/q_r?3^S]fZU*,t-
<)mbOR,m"#6J&s(6bn7g6DQ6(/HdF137rg['d/jujJX@\TI53]^2`AfX9A*acVl5`2o"[-Fm)jX(#ZC!
7<?ZIg\JH8'>(ZkE?F`K"h=_+ESUFr?^IPgQYOar]g^DBi-moVCYQf!G@@hAO*g/G7-!/&6bVgh[s>Xe
GMEOpNjlM?GGq.Y>*B*Q:aRgfBMUS.cZWu^].\irr*=Q0U4']_d;rU)pD`4uCKSpg7Ga[6Pa9S8*Ms!H
LMm0QrB_THQ#=8mmX2GW/BE7=calrcch61+45g0JX)b4@qGEIS%`<7HD1T6:[T,%-%hG(Wc6J\a%+pP3
G04G<<sNgh1s4_Z3*e39AloSM!<10Z8_^!hqi>gD8tN'j(*Ah]p=`<PNZY.'7iW4t`T8/c@6hJ,-iL\Z
F,slbT=.hH@>B9RD&NK=oCZPPQp/X!rh<31jT<Jk*`b`,V*Th[3%X`$K^PEhGLIa:a*UhaKAp=1X"MP`
HZ7Hg/bX:CIJqU0Ql82X$S[WLYh&<J&shYC3kE\5HS4fm%10b$i&cG9Vhk:icNQ-E%AZ"Id>*OQH,S5!
0Jtgq)/^2bDmHUVY2@Z1:T"=;LMt)%>'''UTo=8PZpmT5oK\?9/=%#VESujicd"M_P'qm!cR=5+75P1[
XY*cCfBjMr5!Rs/aol.1,2[YLT,KSa)r>GH3cs+fZ2@o&Je$mK;;?ncBL-O.VE"!>CPB;UIB"^`e()NI
+mpbAC6Z`qh5se=oPDJSEk@Tn'APGQI\p8>O4u!Cl21'l(Z(cC\IEp#!8t`gRKUpZIJT/`qTZn4@;YSG
3-s)fc9Q.\>RF!fkYHm]K%,,+$q6gii$k(9*-ZlF`sQrnV6S0C]QFm#Bd3t/@dht<PK/_P3b&\ujR2(Y
R[CQ0-B/<YP2oeF4>]32gRk``\6*>Q,C*$d@+c!B?;fu1-%8bO,F*_p(a>JI!`-NBq@?`pGRa~>
Q
0 J
1.45000 M
newpath
299.108 220.322 m
299.108 211.651 l
301.733 211.651 l
302.565 211.651 303.203 211.834 303.646 212.201  c
304.090 212.569 304.312 213.102 304.312 213.801  c
304.312 214.957 303.728 215.777 302.560 216.262  c
305.454 220.322 l
303.942 220.322 l
301.476 216.654 l
300.327 216.654 l
300.327 220.322 l
h
300.327 215.735 m
300.726 215.735 l
302.272 215.735 303.046 215.127 303.046 213.912  c
303.046 213.018 302.397 212.570 301.101 212.570  c
300.327 212.570 l
h
311.396 220.117 m
310.622 220.352 309.960 220.469 309.409 220.469  c
308.472 220.469 307.707 220.157 307.115 219.534  c
306.523 218.911 306.228 218.104 306.228 217.111  c
306.228 216.147 306.488 215.356 307.010 214.738  c
307.531 214.121 308.198 213.813 309.011 213.813  c
309.780 213.813 310.375 214.086 310.795 214.633  c
311.215 215.180 311.425 215.957 311.425 216.965  c
311.419 217.322 l
307.405 217.322 l
307.573 218.834 308.313 219.590 309.626 219.590  c
310.106 219.590 310.696 219.461 311.396 219.203  c
h
307.458 216.455 m
310.265 216.455 l
310.265 215.272 309.823 214.680 308.940 214.680  c
308.054 214.680 307.560 215.272 307.458 216.455  c
h
313.417 220.322 m
313.417 213.959 l
314.571 213.959 l
314.571 215.154 l
315.134 214.264 315.856 213.819 316.739 213.819  c
317.591 213.819 318.171 214.264 318.479 215.154  c
319.026 214.260 319.737 213.813 320.612 213.813  c
321.175 213.813 321.610 213.978 321.919 214.308  c
322.228 214.638 322.382 215.100 322.382 215.694  c
322.382 220.322 l
321.222 220.322 l
321.222 215.875 l
321.222 215.149 320.935 214.785 320.360 214.785  c
319.763 214.785 319.136 215.209 318.479 216.057  c
318.479 220.322 l
317.319 220.322 l
317.319 215.875 l
317.319 215.145 317.026 214.779 316.440 214.779  c
315.858 214.779 315.235 215.205 314.571 216.057  c
314.571 220.322 l
h
327.110 220.469 m
326.200 220.469 325.474 220.167 324.931 219.564  c
324.388 218.960 324.116 218.152 324.116 217.141  c
324.116 216.117 324.389 215.308 324.934 214.712  c
325.479 214.116 326.218 213.819 327.151 213.819  c
328.085 213.819 328.824 214.116 329.369 214.712  c
329.914 215.308 330.187 216.113 330.187 217.129  c
330.187 218.168 329.913 218.985 329.366 219.578  c
328.819 220.172 328.067 220.469 327.110 220.469  c
h
327.128 219.602 m
328.351 219.602 328.962 218.777 328.962 217.129  c
328.962 215.500 328.358 214.686 327.151 214.686  c
325.948 214.686 325.347 215.504 325.347 217.141  c
325.347 218.781 325.940 219.602 327.128 219.602  c
h
333.901 220.469 m
333.315 220.469 332.858 220.301 332.530 219.965  c
332.202 219.629 332.038 219.162 332.038 218.565  c
332.038 214.826 l
331.241 214.826 l
331.241 213.959 l
332.038 213.959 l
332.038 212.805 l
333.192 212.694 l
333.192 213.959 l
334.856 213.959 l
334.856 214.826 l
333.192 214.826 l
333.192 218.354 l
333.192 219.186 333.552 219.602 334.271 219.602  c
334.423 219.602 334.608 219.576 334.827 219.526  c
334.827 220.322 l
334.472 220.420 334.163 220.469 333.901 220.469  c
h
341.144 220.117 m
340.370 220.352 339.708 220.469 339.157 220.469  c
338.220 220.469 337.455 220.157 336.863 219.534  c
336.271 218.911 335.976 218.104 335.976 217.111  c
335.976 216.147 336.236 215.356 336.758 214.738  c
337.279 214.121 337.946 213.813 338.759 213.813  c
339.528 213.813 340.123 214.086 340.543 214.633  c
340.963 215.180 341.173 215.957 341.173 216.965  c
341.167 217.322 l
337.153 217.322 l
337.321 218.834 338.062 219.590 339.374 219.590  c
339.854 219.590 340.444 219.461 341.144 219.203  c
h
337.206 216.455 m
340.013 216.455 l
340.013 215.272 339.571 214.680 338.688 214.680  c
337.802 214.680 337.308 215.272 337.206 216.455  c
h
f
newpath
296.601 234.455 m
296.601 225.783 l
299.226 225.783 l
300.058 225.783 300.695 225.967 301.139 226.334  c
301.582 226.701 301.804 227.235 301.804 227.934  c
301.804 229.090 301.220 229.910 300.052 230.395  c
302.946 234.455 l
301.435 234.455 l
298.968 230.787 l
297.819 230.787 l
297.819 234.455 l
h
297.819 229.867 m
298.218 229.867 l
299.765 229.867 300.538 229.260 300.538 228.045  c
300.538 227.151 299.890 226.703 298.593 226.703  c
297.819 226.703 l
h
308.888 234.250 m
308.114 234.485 307.452 234.602 306.901 234.602  c
305.964 234.602 305.199 234.290 304.607 233.667  c
304.016 233.044 303.720 232.236 303.720 231.244  c
303.720 230.279 303.980 229.488 304.502 228.871  c
305.023 228.254 305.690 227.945 306.503 227.945  c
307.272 227.945 307.867 228.219 308.287 228.766  c
308.707 229.313 308.917 230.090 308.917 231.098  c
308.911 231.455 l
304.897 231.455 l
305.065 232.967 305.806 233.723 307.118 233.723  c
307.599 233.723 308.188 233.594 308.888 233.336  c
h
304.950 230.588 m
307.757 230.588 l
307.757 229.404 307.315 228.813 306.433 228.813  c
305.546 228.813 305.052 229.404 304.950 230.588  c
h
312.597 234.602 m
312.069 234.602 311.429 234.479 310.675 234.233  c
310.675 233.172 l
311.429 233.547 312.085 233.735 312.644 233.735  c
312.976 233.735 313.251 233.645 313.470 233.465  c
313.688 233.285 313.798 233.061 313.798 232.791  c
313.798 232.397 313.491 232.070 312.878 231.813  c
312.204 231.526 l
311.208 231.111 310.710 230.516 310.710 229.738  c
310.710 229.184 310.906 228.747 311.299 228.429  c
311.691 228.111 312.229 227.951 312.913 227.951  c
313.269 227.951 313.708 228.000 314.231 228.098  c
314.472 228.145 l
314.472 229.106 l
313.827 228.914 313.315 228.819 312.937 228.819  c
312.194 228.819 311.823 229.088 311.823 229.627  c
311.823 229.975 312.104 230.268 312.667 230.506  c
313.224 230.740 l
313.853 231.006 314.298 231.286 314.560 231.581  c
314.821 231.876 314.952 232.244 314.952 232.686  c
314.952 233.244 314.731 233.703 314.290 234.063  c
313.849 234.422 313.284 234.602 312.597 234.602  c
h
319.517 234.602 m
318.606 234.602 317.880 234.300 317.337 233.696  c
316.794 233.093 316.522 232.285 316.522 231.274  c
316.522 230.250 316.795 229.441 317.340 228.845  c
317.885 228.249 318.624 227.951 319.558 227.951  c
320.491 227.951 321.230 228.249 321.775 228.845  c
322.320 229.441 322.593 230.246 322.593 231.262  c
322.593 232.301 322.319 233.117 321.772 233.711  c
321.226 234.305 320.474 234.602 319.517 234.602  c
h
319.534 233.735 m
320.757 233.735 321.368 232.910 321.368 231.262  c
321.368 229.633 320.765 228.819 319.558 228.819  c
318.354 228.819 317.753 229.637 317.753 231.274  c
317.753 232.914 318.347 233.735 319.534 233.735  c
h
324.397 234.455 m
324.397 225.203 l
325.552 225.203 l
325.552 234.455 l
h
329.185 234.455 m
326.817 228.092 l
327.972 228.092 l
329.823 233.043 l
331.774 228.092 l
332.853 228.092 l
330.339 234.455 l
h
338.741 234.250 m
337.968 234.485 337.306 234.602 336.755 234.602  c
335.817 234.602 335.053 234.290 334.461 233.667  c
333.869 233.044 333.573 232.236 333.573 231.244  c
333.573 230.279 333.834 229.488 334.355 228.871  c
334.877 228.254 335.544 227.945 336.356 227.945  c
337.126 227.945 337.721 228.219 338.141 228.766  c
338.561 229.313 338.771 230.090 338.771 231.098  c
338.765 231.455 l
334.751 231.455 l
334.919 232.967 335.659 233.723 336.972 233.723  c
337.452 233.723 338.042 233.594 338.741 233.336  c
h
334.804 230.588 m
337.610 230.588 l
337.610 229.404 337.169 228.813 336.286 228.813  c
335.399 228.813 334.905 229.404 334.804 230.588  c
h
340.763 234.455 m
340.763 228.092 l
341.917 228.092 l
341.917 229.287 l
342.374 228.397 343.038 227.951 343.909 227.951  c
344.026 227.951 344.149 227.961 344.278 227.981  c
344.278 229.059 l
344.079 228.992 343.903 228.959 343.751 228.959  c
343.021 228.959 342.409 229.393 341.917 230.260  c
341.917 234.455 l
h
f
2 J
10.0000 M
q
[ 17.0000 0.00000 0.00000 26.0000 415.809 303.304 ] concat
<<
/ImageType 1
/Width 17  /Height 26
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [17 0 0 26 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gat=habj8!&;K'q+@NPU,Ie:NS3^$,G+N?+MAYC#Xf,)!"q_T?k`pb>iJI,F08NI=P-.5NpR_6IYN_S;
nT[#5IL:\3g[-ngc"aZ_rjrRCK>h<ip@bq$YHunu3h>\\3p6,1F?5!,DRZ/0HG+6KE7A\^lh1,GoCJ$j
a6EMS#cUcQ0/"u<7K]8`X&Z4N4q!Osjj7^-*"I`WUA%)6,,AHrj$kG+!i]5$U-Bh_,SCEqh-TNk^CEJ6
+I=qa!\kUQ>-7MS&@.a"Vj#554<>#g_eus\71_eN8u6"%8;*n=VeZS:+oZ:96]X\]$sJ4AF"A)"-BmD-
f^&4e5VQk87s#8SVpbr@1`E2fO\!D@a?rK^TC;OO&/"s8op&_9DYKbG"NM1(!so)3nTZ%%%j<7iH'fF5
)>u_Z*T[qM2`,Ch#(rUG-j5/gMoF]Mq\dN[6>?JC_LO`i&$u.W(*GN)NBsn7"D=?F=@hJD"UNAh!!jeg
Ea]9.6=S!<kAh#?&B*Wr6,_?2/E0nU6=@j%:O:)q39:\20UYToZNJi@SaIDjd:e>]%A?j(X&Yuol1KA!
;Q3]tAMTZA,.Tu.kJ!Ug#WdjcA26!gCc9a!9"Tii-^@;t.0gt"*@<;I>YY>-L#O6`$]0T>"#r2=^d<>X
=ia`V+XIPr<(b7HHdB"Tms4?`o/Sn]DR[1Lip4P-"mGRR*.k\*/iI7N>iPPe)]IS\~>
Q
0 J
1.45000 M
newpath
439.364 320.941 m
439.364 319.909 l
439.938 320.140 440.485 320.255 441.004 320.255  c
441.575 320.255 442.023 320.087 442.349 319.751  c
442.675 319.415 442.838 318.952 442.838 318.363  c
442.838 317.062 441.942 316.411 440.149 316.411  c
439.946 316.411 439.733 316.425 439.510 316.452  c
439.510 312.234 l
443.899 312.234 l
443.899 313.242 l
440.524 313.242 l
440.524 315.527 l
441.637 315.527 442.506 315.783 443.131 316.294  c
443.756 316.806 444.069 317.515 444.069 318.421  c
444.069 319.265 443.785 319.926 443.216 320.405  c
442.648 320.883 441.860 321.122 440.852 321.122  c
440.414 321.122 439.918 321.062 439.364 320.941  c
h
445.926 321.843 m
445.926 322.640 l
446.770 322.066 447.439 321.285 447.933 320.299  c
448.427 319.313 448.674 318.261 448.674 317.144  c
448.674 316.031 448.427 314.981 447.933 313.994  c
447.439 313.008 446.770 312.228 445.926 311.654  c
445.926 312.451 l
446.500 313.076 446.910 313.747 447.154 314.466  c
447.398 315.185 447.520 316.077 447.520 317.144  c
447.520 318.214 447.398 319.109 447.154 319.827  c
446.910 320.546 446.500 321.218 445.926 321.843  c
h
454.311 320.906 m
454.311 312.234 l
456.936 312.234 l
457.768 312.234 458.406 312.417 458.849 312.784  c
459.292 313.152 459.514 313.685 459.514 314.384  c
459.514 315.540 458.930 316.361 457.762 316.845  c
460.657 320.906 l
459.145 320.906 l
456.678 317.238 l
455.530 317.238 l
455.530 320.906 l
h
455.530 316.318 m
455.928 316.318 l
457.475 316.318 458.248 315.710 458.248 314.495  c
458.248 313.601 457.600 313.154 456.303 313.154  c
455.530 313.154 l
h
464.424 321.052 m
463.514 321.052 462.788 320.750 462.245 320.147  c
461.702 319.543 461.430 318.736 461.430 317.724  c
461.430 316.701 461.703 315.891 462.247 315.295  c
462.792 314.700 463.532 314.402 464.465 314.402  c
465.399 314.402 466.138 314.700 466.683 315.295  c
467.228 315.891 467.500 316.697 467.500 317.712  c
467.500 318.751 467.227 319.568 466.680 320.161  c
466.133 320.755 465.381 321.052 464.424 321.052  c
h
464.442 320.185 m
465.664 320.185 466.276 319.361 466.276 317.712  c
466.276 316.083 465.672 315.269 464.465 315.269  c
463.262 315.269 462.661 316.087 462.661 317.724  c
462.661 319.365 463.254 320.185 464.442 320.185  c
h
471.795 321.052 m
470.885 321.052 470.159 320.750 469.616 320.147  c
469.073 319.543 468.801 318.736 468.801 317.724  c
468.801 316.701 469.074 315.891 469.619 315.295  c
470.163 314.700 470.903 314.402 471.836 314.402  c
472.770 314.402 473.509 314.700 474.054 315.295  c
474.599 315.891 474.871 316.697 474.871 317.712  c
474.871 318.751 474.598 319.568 474.051 320.161  c
473.504 320.755 472.752 321.052 471.795 321.052  c
h
471.813 320.185 m
473.036 320.185 473.647 319.361 473.647 317.712  c
473.647 316.083 473.043 315.269 471.836 315.269  c
470.633 315.269 470.032 316.087 470.032 317.724  c
470.032 319.365 470.625 320.185 471.813 320.185  c
h
478.586 321.052 m
478.000 321.052 477.543 320.884 477.215 320.548  c
476.887 320.212 476.723 319.745 476.723 319.148  c
476.723 315.409 l
475.926 315.409 l
475.926 314.542 l
476.723 314.542 l
476.723 313.388 l
477.877 313.277 l
477.877 314.542 l
479.541 314.542 l
479.541 315.409 l
477.877 315.409 l
477.877 318.937 l
477.877 319.769 478.237 320.185 478.955 320.185  c
479.108 320.185 479.293 320.159 479.512 320.109  c
479.512 320.906 l
479.157 321.003 478.848 321.052 478.586 321.052  c
h
484.528 320.906 m
484.528 320.038 l
488.465 315.409 l
484.709 315.409 l
484.709 314.542 l
489.889 314.542 l
489.889 315.409 l
485.952 320.038 l
489.965 320.038 l
489.965 320.906 l
h
494.330 321.052 m
493.420 321.052 492.694 320.750 492.151 320.147  c
491.608 319.543 491.336 318.736 491.336 317.724  c
491.336 316.701 491.609 315.891 492.154 315.295  c
492.699 314.700 493.438 314.402 494.371 314.402  c
495.305 314.402 496.044 314.700 496.589 315.295  c
497.134 315.891 497.407 316.697 497.407 317.712  c
497.407 318.751 497.133 319.568 496.586 320.161  c
496.039 320.755 495.288 321.052 494.330 321.052  c
h
494.348 320.185 m
495.571 320.185 496.182 319.361 496.182 317.712  c
496.182 316.083 495.579 315.269 494.371 315.269  c
493.168 315.269 492.567 316.087 492.567 317.724  c
492.567 319.365 493.161 320.185 494.348 320.185  c
h
499.211 320.906 m
499.211 314.542 l
500.366 314.542 l
500.366 315.738 l
500.975 314.847 501.721 314.402 502.604 314.402  c
503.155 314.402 503.594 314.576 503.922 314.926  c
504.250 315.276 504.414 315.745 504.414 316.335  c
504.414 320.906 l
503.260 320.906 l
503.260 316.710 l
503.260 316.238 503.191 315.901 503.052 315.700  c
502.913 315.498 502.684 315.398 502.364 315.398  c
501.657 315.398 500.991 315.861 500.366 316.786  c
500.366 320.906 l
h
511.323 320.701 m
510.549 320.935 509.887 321.052 509.336 321.052  c
508.399 321.052 507.634 320.741 507.042 320.117  c
506.451 319.494 506.155 318.687 506.155 317.695  c
506.155 316.730 506.415 315.939 506.937 315.322  c
507.458 314.704 508.125 314.396 508.938 314.396  c
509.707 314.396 510.302 314.669 510.722 315.216  c
511.142 315.763 511.352 316.540 511.352 317.548  c
511.346 317.906 l
507.332 317.906 l
507.500 319.417 508.241 320.173 509.553 320.173  c
510.034 320.173 510.623 320.044 511.323 319.786  c
h
507.385 317.038 m
510.192 317.038 l
510.192 315.855 509.750 315.263 508.868 315.263  c
507.981 315.263 507.487 315.855 507.385 317.038  c
h
f
2 J
10.0000 M
q
[ 17.0000 0.00000 0.00000 26.0000 415.809 353.072 ] concat
<<
/ImageType 1
/Width 17  /Height 26
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [17 0 0 26 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gat=habj8!&;K'q+@NPU,Ie:NS3^$,G+N?+MAYC#Xf,)!"q_T?k`pb>iJI,F08NI=P-.5NpR_6IYN_S;
nT[#5IL:\3g[-ngc"aZ_rjrRCK>h<ip@bq$YHunu3h>\\3p6,1F?5!,DRZ/0HG+6KE7A\^lh1,GoCJ$j
a6EMS#cUcQ0/"u<7K]8`X&Z4N4q!Osjj7^-*"I`WUA%)6,,AHrj$kG+!i]5$U-Bh_,SCEqh-TNk^CEJ6
+I=qa!\kUQ>-7MS&@.a"Vj#554<>#g_eus\71_eN8u6"%8;*n=VeZS:+oZ:96]X\]$sJ4AF"A)"-BmD-
f^&4e5VQk87s#8SVpbr@1`E2fO\!D@a?rK^TC;OO&/"s8op&_9DYKbG"NM1(!so)3nTZ%%%j<7iH'fF5
)>u_Z*T[qM2`,Ch#(rUG-j5/gMoF]Mq\dN[6>?JC_LO`i&$u.W(*GN)NBsn7"D=?F=@hJD"UNAh!!jeg
Ea]9.6=S!<kAh#?&B*Wr6,_?2/E0nU6=@j%:O:)q39:\20UYToZNJi@SaIDjd:e>]%A?j(X&Yuol1KA!
;Q3]tAMTZA,.Tu.kJ!Ug#WdjcA26!gCc9a!9"Tii-^@;t.0gt"*@<;I>YY>-L#O6`$]0T>"#r2=^d<>X
=ia`V+XIPr<(b7HHdB"Tms4?`o/Sn]DR[1Lip4P-"mGRR*.k\*/iI7N>iPPe)]IS\~>
Q
0 J
1.45000 M
newpath
442.422 370.330 m
442.422 367.875 l
438.520 367.875 l
438.520 367.002 l
442.422 361.658 l
443.506 361.658 l
443.506 366.931 l
444.666 366.931 l
444.666 367.875 l
443.506 367.875 l
443.506 370.330 l
h
439.651 366.931 m
442.498 366.931 l
442.498 363.076 l
h
445.926 371.267 m
445.926 372.064 l
446.770 371.490 447.439 370.710 447.933 369.723  c
448.427 368.737 448.674 367.685 448.674 366.568  c
448.674 365.455 448.427 364.405 447.933 363.419  c
447.439 362.432 446.770 361.652 445.926 361.078  c
445.926 361.875 l
446.500 362.500 446.910 363.172 447.154 363.890  c
447.398 364.609 447.520 365.502 447.520 366.568  c
447.520 367.638 447.398 368.533 447.154 369.252  c
446.910 369.970 446.500 370.642 445.926 371.267  c
h
454.364 370.330 m
454.364 368.882 l
455.811 368.882 l
455.811 370.330 l
h
460.627 370.476 m
459.768 370.476 459.055 370.158 458.489 369.521  c
457.922 368.884 457.639 368.082 457.639 367.113  c
457.639 366.078 457.919 365.271 458.480 364.693  c
459.040 364.115 459.823 363.826 460.827 363.826  c
461.323 363.826 461.877 363.894 462.491 364.031  c
462.491 364.998 l
461.838 364.806 461.307 364.711 460.897 364.711  c
460.307 364.711 459.833 364.932 459.476 365.376  c
459.119 365.819 458.940 366.410 458.940 367.148  c
458.940 367.863 459.123 368.441 459.491 368.882  c
459.858 369.324 460.338 369.545 460.932 369.545  c
461.459 369.545 462.002 369.410 462.561 369.140  c
462.561 370.136 l
461.815 370.363 461.170 370.476 460.627 370.476  c
h
466.780 370.476 m
465.870 370.476 465.143 370.174 464.600 369.571  c
464.057 368.967 463.786 368.160 463.786 367.148  c
463.786 366.125 464.058 365.315 464.603 364.719  c
465.148 364.124 465.887 363.826 466.821 363.826  c
467.754 363.826 468.494 364.124 469.038 364.719  c
469.583 365.315 469.856 366.121 469.856 367.136  c
469.856 368.175 469.582 368.992 469.036 369.586  c
468.489 370.179 467.737 370.476 466.780 370.476  c
h
466.797 369.609 m
468.020 369.609 468.631 368.785 468.631 367.136  c
468.631 365.507 468.028 364.693 466.821 364.693  c
465.618 364.693 465.016 365.511 465.016 367.148  c
465.016 368.789 465.610 369.609 466.797 369.609  c
h
471.661 370.330 m
471.661 363.966 l
472.815 363.966 l
472.815 365.162 l
473.377 364.271 474.100 363.826 474.983 363.826  c
475.834 363.826 476.414 364.271 476.723 365.162  c
477.270 364.267 477.981 363.820 478.856 363.820  c
479.418 363.820 479.854 363.985 480.163 364.315  c
480.471 364.645 480.625 365.107 480.625 365.701  c
480.625 370.330 l
479.465 370.330 l
479.465 365.882 l
479.465 365.156 479.178 364.793 478.604 364.793  c
478.006 364.793 477.379 365.216 476.723 366.064  c
476.723 370.330 l
475.563 370.330 l
475.563 365.882 l
475.563 365.152 475.270 364.787 474.684 364.787  c
474.102 364.787 473.479 365.213 472.815 366.064  c
472.815 370.330 l
h
486.227 370.330 m
486.227 369.463 l
490.164 364.834 l
486.409 364.834 l
486.409 363.966 l
491.588 363.966 l
491.588 364.834 l
487.651 369.463 l
491.664 369.463 l
491.664 370.330 l
h
496.030 370.476 m
495.120 370.476 494.393 370.174 493.850 369.571  c
493.307 368.967 493.036 368.160 493.036 367.148  c
493.036 366.125 493.308 365.315 493.853 364.719  c
494.398 364.124 495.137 363.826 496.071 363.826  c
497.004 363.826 497.744 364.124 498.288 364.719  c
498.833 365.315 499.106 366.121 499.106 367.136  c
499.106 368.175 498.832 368.992 498.286 369.586  c
497.739 370.179 496.987 370.476 496.030 370.476  c
h
496.047 369.609 m
497.270 369.609 497.881 368.785 497.881 367.136  c
497.881 365.507 497.278 364.693 496.071 364.693  c
494.868 364.693 494.266 365.511 494.266 367.148  c
494.266 368.789 494.860 369.609 496.047 369.609  c
h
500.911 370.330 m
500.911 363.966 l
502.065 363.966 l
502.065 365.162 l
502.674 364.271 503.420 363.826 504.303 363.826  c
504.854 363.826 505.293 364.001 505.621 364.350  c
505.950 364.700 506.114 365.170 506.114 365.759  c
506.114 370.330 l
504.959 370.330 l
504.959 366.134 l
504.959 365.662 504.890 365.325 504.751 365.124  c
504.613 364.922 504.383 364.822 504.063 364.822  c
503.356 364.822 502.690 365.285 502.065 366.211  c
502.065 370.330 l
h
513.022 370.125 m
512.248 370.359 511.586 370.476 511.036 370.476  c
510.098 370.476 509.333 370.165 508.742 369.542  c
508.150 368.919 507.854 368.111 507.854 367.119  c
507.854 366.154 508.115 365.363 508.636 364.746  c
509.158 364.129 509.825 363.820 510.637 363.820  c
511.407 363.820 512.001 364.093 512.421 364.640  c
512.841 365.187 513.051 365.964 513.051 366.972  c
513.045 367.330 l
509.032 367.330 l
509.200 368.841 509.940 369.597 511.252 369.597  c
511.733 369.597 512.323 369.468 513.022 369.211  c
h
509.084 366.463 m
511.891 366.463 l
511.891 365.279 511.450 364.687 510.567 364.687  c
509.680 364.687 509.186 365.279 509.084 366.463  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
339.600 415.734 m
407.835 415.734 l
S
newpath
415.835 415.734 m
403.835 410.734 l
406.835 415.734 l
403.835 420.734 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
299.721 386.068 m
287.447 362.315 l
284.005 353.152 l
282.857 343.430 l
282.857 327.430 l
284.557 318.098 l
289.658 310.099 l
308.399 289.894 l
S
newpath
303.393 393.175 m
302.327 380.219 l
299.262 385.179 l
293.442 384.809 l
h
f
newpath
309.156 333.523 m
309.156 332.656 l
310.890 332.656 l
310.890 325.812 l
309.156 326.246 l
309.156 325.355 l
312.050 324.635 l
312.050 332.656 l
313.785 332.656 l
313.785 333.523 l
h
315.373 334.461 m
315.373 335.258 l
316.216 334.683 316.885 333.903 317.379 332.917  c
317.874 331.931 318.121 330.879 318.121 329.762  c
318.121 328.648 317.874 327.598 317.379 326.612  c
316.885 325.626 316.216 324.846 315.373 324.271  c
315.373 325.068 l
315.947 325.693 316.356 326.365 316.600 327.084  c
316.844 327.803 316.966 328.695 316.966 329.762  c
316.966 330.832 316.844 331.726 316.600 332.445  c
316.356 333.164 315.947 333.836 315.373 334.461  c
h
323.757 333.523 m
323.757 324.851 l
326.382 324.851 l
327.214 324.851 327.852 325.035 328.295 325.402  c
328.739 325.769 328.961 326.303 328.961 327.002  c
328.961 328.158 328.377 328.978 327.209 329.463  c
330.103 333.523 l
328.591 333.523 l
326.125 329.855 l
324.976 329.855 l
324.976 333.523 l
h
324.976 328.935 m
325.375 328.935 l
326.921 328.935 327.695 328.328 327.695 327.113  c
327.695 326.219 327.046 325.771 325.750 325.771  c
324.976 325.771 l
h
336.044 333.318 m
335.271 333.553 334.609 333.670 334.058 333.670  c
333.121 333.670 332.356 333.358 331.764 332.735  c
331.172 332.112 330.877 331.305 330.877 330.312  c
330.877 329.348 331.137 328.556 331.659 327.939  c
332.180 327.322 332.847 327.014 333.660 327.014  c
334.429 327.014 335.024 327.287 335.444 327.834  c
335.864 328.381 336.074 329.158 336.074 330.166  c
336.068 330.523 l
332.054 330.523 l
332.222 332.035 332.962 332.791 334.275 332.791  c
334.755 332.791 335.345 332.662 336.044 332.404  c
h
332.107 329.656 m
334.914 329.656 l
334.914 328.473 334.472 327.881 333.589 327.881  c
332.703 327.881 332.209 328.473 332.107 329.656  c
h
342.150 335.838 m
342.150 332.328 l
341.681 333.223 340.974 333.670 340.029 333.670  c
339.263 333.670 338.661 333.390 338.221 332.832  c
337.782 332.273 337.562 331.510 337.562 330.541  c
337.562 329.482 337.811 328.631 338.309 327.986  c
338.807 327.342 339.462 327.019 340.275 327.019  c
341.029 327.019 341.654 327.308 342.150 327.887  c
342.150 327.160 l
343.310 327.160 l
343.310 335.838 l
h
342.150 328.678 m
341.552 328.150 340.986 327.887 340.451 327.887  c
339.345 327.887 338.793 328.732 338.793 330.424  c
338.793 331.912 339.285 332.656 340.269 332.656  c
340.910 332.656 341.537 332.306 342.150 331.607  c
h
349.597 333.523 m
349.597 332.328 l
348.984 333.223 348.240 333.670 347.365 333.670  c
346.810 333.670 346.369 333.495 346.041 333.145  c
345.712 332.796 345.548 332.324 345.548 331.730  c
345.548 327.160 l
346.703 327.160 l
346.703 331.355 l
346.703 331.832 346.772 332.171 346.911 332.372  c
347.049 332.573 347.281 332.674 347.605 332.674  c
348.308 332.674 348.972 332.211 349.597 331.285  c
349.597 327.160 l
350.752 327.160 l
350.752 333.523 l
h
357.730 333.318 m
356.957 333.553 356.294 333.670 355.744 333.670  c
354.806 333.670 354.042 333.358 353.450 332.735  c
352.858 332.112 352.562 331.305 352.562 330.312  c
352.562 329.348 352.823 328.556 353.344 327.939  c
353.866 327.322 354.533 327.014 355.345 327.014  c
356.115 327.014 356.710 327.287 357.129 327.834  c
357.549 328.381 357.759 329.158 357.759 330.166  c
357.753 330.523 l
353.740 330.523 l
353.908 332.035 354.648 332.791 355.961 332.791  c
356.441 332.791 357.031 332.662 357.730 332.404  c
h
353.793 329.656 m
356.599 329.656 l
356.599 328.473 356.158 327.881 355.275 327.881  c
354.388 327.881 353.894 328.473 353.793 329.656  c
h
361.439 333.670 m
360.912 333.670 360.271 333.547 359.517 333.301  c
359.517 332.240 l
360.271 332.615 360.927 332.803 361.486 332.803  c
361.818 332.803 362.093 332.713 362.312 332.533  c
362.531 332.353 362.640 332.129 362.640 331.859  c
362.640 331.465 362.334 331.139 361.720 330.881  c
361.046 330.594 l
360.050 330.180 359.552 329.584 359.552 328.806  c
359.552 328.252 359.749 327.815 360.141 327.497  c
360.534 327.179 361.072 327.019 361.755 327.019  c
362.111 327.019 362.550 327.068 363.074 327.166  c
363.314 327.213 l
363.314 328.174 l
362.669 327.982 362.158 327.887 361.779 327.887  c
361.037 327.887 360.666 328.156 360.666 328.695  c
360.666 329.043 360.947 329.336 361.509 329.574  c
362.066 329.808 l
362.695 330.074 363.140 330.354 363.402 330.649  c
363.664 330.944 363.794 331.312 363.794 331.754  c
363.794 332.312 363.574 332.771 363.132 333.131  c
362.691 333.490 362.127 333.670 361.439 333.670  c
h
367.779 333.670 m
367.193 333.670 366.736 333.502 366.408 333.166  c
366.080 332.830 365.916 332.363 365.916 331.765  c
365.916 328.027 l
365.119 328.027 l
365.119 327.160 l
365.916 327.160 l
365.916 326.006 l
367.070 325.894 l
367.070 327.160 l
368.734 327.160 l
368.734 328.027 l
367.070 328.027 l
367.070 331.555 l
367.070 332.387 367.429 332.803 368.148 332.803  c
368.300 332.803 368.486 332.777 368.705 332.726  c
368.705 333.523 l
368.349 333.621 368.041 333.670 367.779 333.670  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
314.647 296.790 m
305.896 311.793 l
302.117 320.771 l
300.857 330.430 l
300.857 338.430 l
301.864 348.219 l
304.885 357.583 l
319.981 391.889 l
S
newpath
318.678 289.880 m
308.313 297.726 l
314.143 297.654 l
316.951 302.764 l
h
f
newpath
222.427 291.966 m
222.427 290.952 l
222.763 290.167 223.443 289.311 224.466 288.386  c
225.129 287.794 l
225.980 287.024 226.406 286.261 226.406 285.503  c
226.406 285.018 226.260 284.638 225.969 284.360  c
225.678 284.083 225.279 283.944 224.771 283.944  c
224.170 283.944 223.461 284.177 222.644 284.641  c
222.644 283.622 l
223.414 283.259 224.177 283.077 224.935 283.077  c
225.748 283.077 226.400 283.296 226.892 283.733  c
227.384 284.171 227.630 284.751 227.630 285.473  c
227.630 285.993 227.506 286.454 227.258 286.856  c
227.010 287.259 226.548 287.747 225.873 288.321  c
225.427 288.702 l
224.502 289.487 223.966 290.237 223.822 290.952  c
227.589 290.952 l
227.589 291.966 l
h
229.453 292.903 m
229.453 293.700 l
230.297 293.126 230.965 292.346 231.460 291.359  c
231.954 290.373 232.201 289.321 232.201 288.204  c
232.201 287.091 231.954 286.041 231.460 285.055  c
230.965 284.068 230.297 283.288 229.453 282.714  c
229.453 283.511 l
230.027 284.136 230.436 284.807 230.680 285.526  c
230.924 286.245 231.047 287.138 231.047 288.204  c
231.047 289.274 230.924 290.169 230.680 290.888  c
230.436 291.606 230.027 292.278 229.453 292.903  c
h
237.838 291.966 m
237.838 283.294 l
240.463 283.294 l
241.295 283.294 241.932 283.477 242.376 283.845  c
242.819 284.212 243.041 284.745 243.041 285.444  c
243.041 286.600 242.457 287.421 241.289 287.905  c
244.183 291.966 l
242.672 291.966 l
240.205 288.298 l
239.056 288.298 l
239.056 291.966 l
h
239.056 287.378 m
239.455 287.378 l
241.002 287.378 241.775 286.770 241.775 285.555  c
241.775 284.661 241.127 284.214 239.830 284.214  c
239.056 284.214 l
h
250.125 291.761 m
249.351 291.995 248.689 292.112 248.138 292.112  c
247.201 292.112 246.436 291.801 245.844 291.178  c
245.253 290.555 244.957 289.747 244.957 288.755  c
244.957 287.790 245.217 286.999 245.739 286.382  c
246.260 285.764 246.927 285.456 247.740 285.456  c
248.509 285.456 249.104 285.729 249.524 286.276  c
249.944 286.823 250.154 287.600 250.154 288.608  c
250.148 288.966 l
246.134 288.966 l
246.302 290.477 247.043 291.233 248.355 291.233  c
248.836 291.233 249.425 291.104 250.125 290.846  c
h
246.187 288.098 m
248.994 288.098 l
248.994 286.915 248.552 286.323 247.670 286.323  c
246.783 286.323 246.289 286.915 246.187 288.098  c
h
253.834 292.112 m
253.306 292.112 252.666 291.989 251.912 291.743  c
251.912 290.682 l
252.666 291.057 253.322 291.245 253.880 291.245  c
254.213 291.245 254.488 291.155 254.707 290.975  c
254.925 290.796 255.035 290.571 255.035 290.302  c
255.035 289.907 254.728 289.581 254.115 289.323  c
253.441 289.036 l
252.445 288.622 251.947 288.026 251.947 287.249  c
251.947 286.694 252.143 286.258 252.536 285.939  c
252.928 285.621 253.466 285.462 254.150 285.462  c
254.505 285.462 254.945 285.511 255.468 285.608  c
255.709 285.655 l
255.709 286.616 l
255.064 286.425 254.552 286.329 254.173 286.329  c
253.431 286.329 253.060 286.598 253.060 287.138  c
253.060 287.485 253.341 287.778 253.904 288.016  c
254.461 288.251 l
255.089 288.516 255.535 288.797 255.797 289.092  c
256.058 289.387 256.189 289.755 256.189 290.196  c
256.189 290.755 255.968 291.214 255.527 291.573  c
255.086 291.932 254.521 292.112 253.834 292.112  c
h
258.263 294.280 m
258.263 285.602 l
259.418 285.602 l
259.418 286.798 l
259.890 285.907 260.599 285.462 261.545 285.462  c
262.310 285.462 262.913 285.741 263.352 286.300  c
263.792 286.858 264.011 287.622 264.011 288.591  c
264.011 289.645 263.762 290.496 263.264 291.142  c
262.766 291.789 262.111 292.112 261.298 292.112  c
260.545 292.112 259.918 291.823 259.418 291.245  c
259.418 294.280 l
h
259.418 290.448 m
260.011 290.979 260.578 291.245 261.117 291.245  c
262.226 291.245 262.781 290.399 262.781 288.708  c
262.781 287.216 262.289 286.470 261.304 286.470  c
260.660 286.470 260.031 286.819 259.418 287.518  c
h
268.306 292.112 m
267.396 292.112 266.670 291.810 266.127 291.207  c
265.584 290.603 265.312 289.796 265.312 288.784  c
265.312 287.761 265.585 286.951 266.130 286.355  c
266.674 285.760 267.414 285.462 268.347 285.462  c
269.281 285.462 270.020 285.760 270.565 286.355  c
271.110 286.951 271.382 287.757 271.382 288.772  c
271.382 289.811 271.109 290.628 270.562 291.221  c
270.015 291.815 269.263 292.112 268.306 292.112  c
h
268.324 291.245 m
269.547 291.245 270.158 290.421 270.158 288.772  c
270.158 287.143 269.554 286.329 268.347 286.329  c
267.144 286.329 266.543 287.147 266.543 288.784  c
266.543 290.425 267.136 291.245 268.324 291.245  c
h
273.187 291.966 m
273.187 285.602 l
274.341 285.602 l
274.341 286.798 l
274.951 285.907 275.697 285.462 276.580 285.462  c
277.130 285.462 277.570 285.637 277.898 285.986  c
278.226 286.336 278.390 286.805 278.390 287.395  c
278.390 291.966 l
277.236 291.966 l
277.236 287.770 l
277.236 287.298 277.167 286.961 277.028 286.760  c
276.889 286.558 276.660 286.458 276.339 286.458  c
275.632 286.458 274.966 286.921 274.341 287.846  c
274.341 291.966 l
h
282.322 292.112 m
281.795 292.112 281.154 291.989 280.400 291.743  c
280.400 290.682 l
281.154 291.057 281.810 291.245 282.369 291.245  c
282.701 291.245 282.976 291.155 283.195 290.975  c
283.414 290.796 283.523 290.571 283.523 290.302  c
283.523 289.907 283.216 289.581 282.603 289.323  c
281.929 289.036 l
280.933 288.622 280.435 288.026 280.435 287.249  c
280.435 286.694 280.631 286.258 281.024 285.939  c
281.417 285.621 281.955 285.462 282.638 285.462  c
282.994 285.462 283.433 285.511 283.957 285.608  c
284.197 285.655 l
284.197 286.616 l
283.552 286.425 283.041 286.329 282.662 286.329  c
281.920 286.329 281.548 286.598 281.548 287.138  c
281.548 287.485 281.830 287.778 282.392 288.016  c
282.949 288.251 l
283.578 288.516 284.023 288.797 284.285 289.092  c
284.547 289.387 284.677 289.755 284.677 290.196  c
284.677 290.755 284.457 291.214 284.015 291.573  c
283.574 291.932 283.009 292.112 282.322 292.112  c
h
291.416 291.761 m
290.642 291.995 289.980 292.112 289.429 292.112  c
288.492 292.112 287.727 291.801 287.135 291.178  c
286.544 290.555 286.248 289.747 286.248 288.755  c
286.248 287.790 286.508 286.999 287.030 286.382  c
287.551 285.764 288.218 285.456 289.031 285.456  c
289.800 285.456 290.395 285.729 290.815 286.276  c
291.235 286.823 291.445 287.600 291.445 288.608  c
291.439 288.966 l
287.425 288.966 l
287.593 290.477 288.334 291.233 289.646 291.233  c
290.127 291.233 290.716 291.104 291.416 290.846  c
h
287.478 288.098 m
290.285 288.098 l
290.285 286.915 289.843 286.323 288.961 286.323  c
288.074 286.323 287.580 286.915 287.478 288.098  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
339.600 396.950 m
410.038 329.442 l
S
newpath
415.814 323.907 m
403.691 328.600 l
409.316 330.134 l
410.610 335.820 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
339.600 406.342 m
408.620 373.268 l
S
newpath
415.835 369.811 m
402.852 370.488 l
407.718 373.700 l
407.174 379.506 l
h
f
2 J
10.0000 M
q
[ 17.0000 0.00000 0.00000 26.0000 415.809 253.536 ] concat
<<
/ImageType 1
/Width 17  /Height 26
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [17 0 0 26 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gat=habj8!&;K'q+@NPU,Ie:NS3^$,G+N?+MAYC#Xf,)!"q_T?k`pb>iJI,F08NI=P-.5NpR_6IYN_S;
nT[#5IL:\3g[-ngc"aZ_rjrRCK>h<ip@bq$YHunu3h>\\3p6,1F?5!,DRZ/0HG+6KE7A\^lh1,GoCJ$j
a6EMS#cUcQ0/"u<7K]8`X&Z4N4q!Osjj7^-*"I`WUA%)6,,AHrj$kG+!i]5$U-Bh_,SCEqh-TNk^CEJ6
+I=qa!\kUQ>-7MS&@.a"Vj#554<>#g_eus\71_eN8u6"%8;*n=VeZS:+oZ:96]X\]$sJ4AF"A)"-BmD-
f^&4e5VQk87s#8SVpbr@1`E2fO\!D@a?rK^TC;OO&/"s8op&_9DYKbG"NM1(!so)3nTZ%%%j<7iH'fF5
)>u_Z*T[qM2`,Ch#(rUG-j5/gMoF]Mq\dN[6>?JC_LO`i&$u.W(*GN)NBsn7"D=?F=@hJD"UNAh!!jeg
Ea]9.6=S!<kAh#?&B*Wr6,_?2/E0nU6=@j%:O:)q39:\20UYToZNJi@SaIDjd:e>]%A?j(X&Yuol1KA!
;Q3]tAMTZA,.Tu.kJ!Ug#WdjcA26!gCc9a!9"Tii-^@;t.0gt"*@<;I>YY>-L#O6`$]0T>"#r2=^d<>X
=ia`V+XIPr<(b7HHdB"Tms4?`o/Sn]DR[1Lip4P-"mGRR*.k\*/iI7N>iPPe)]IS\~>
Q
0 J
1.45000 M
newpath
439.967 266.300 m
440.518 265.585 441.211 265.227 442.047 265.227  c
442.805 265.227 443.425 265.478 443.908 265.980  c
444.390 266.482 444.631 267.126 444.631 267.911  c
444.631 268.813 444.361 269.555 443.820 270.137  c
443.279 270.719 442.592 271.010 441.760 271.010  c
440.803 271.010 440.055 270.626 439.516 269.856  c
438.977 269.087 438.707 268.018 438.707 266.651  c
438.707 265.147 439.017 263.979 439.636 263.147  c
440.255 262.315 441.127 261.899 442.252 261.899  c
442.768 261.899 443.413 262.009 444.186 262.227  c
444.186 263.235 l
443.370 262.923 442.702 262.766 442.182 262.766  c
440.705 262.766 439.967 263.944 439.967 266.300  c
h
443.471 268.169 m
443.471 267.512 443.324 266.997 443.029 266.622  c
442.734 266.247 442.325 266.059 441.801 266.059  c
441.313 266.059 440.893 266.223 440.541 266.552  c
440.190 266.880 440.014 267.274 440.014 267.735  c
440.014 268.462 440.181 269.045 440.515 269.484  c
440.849 269.924 441.291 270.143 441.842 270.143  c
442.338 270.143 442.734 269.965 443.029 269.607  c
443.324 269.250 443.471 268.770 443.471 268.169  c
h
445.926 271.731 m
445.926 272.528 l
446.770 271.954 447.439 271.174 447.933 270.187  c
448.427 269.201 448.674 268.149 448.674 267.032  c
448.674 265.919 448.427 264.869 447.933 263.883  c
447.439 262.896 446.770 262.116 445.926 261.542  c
445.926 262.339 l
446.500 262.964 446.910 263.635 447.154 264.354  c
447.398 265.073 447.520 265.966 447.520 267.032  c
447.520 268.102 447.398 268.997 447.154 269.716  c
446.910 270.434 446.500 271.106 445.926 271.731  c
h
456.373 270.794 m
456.373 263.042 l
453.297 263.042 l
453.297 262.122 l
460.680 262.122 l
460.680 263.042 l
457.604 263.042 l
457.604 270.794 l
h
461.934 270.794 m
461.934 264.430 l
463.088 264.430 l
463.088 265.626 l
463.545 264.735 464.209 264.290 465.080 264.290  c
465.198 264.290 465.321 264.300 465.450 264.319  c
465.450 265.397 l
465.250 265.331 465.075 265.298 464.922 265.298  c
464.192 265.298 463.580 265.731 463.088 266.598  c
463.088 270.794 l
h
470.823 270.794 m
470.823 269.598 l
470.209 270.493 469.465 270.940 468.590 270.940  c
468.036 270.940 467.594 270.765 467.266 270.416  c
466.938 270.066 466.774 269.594 466.774 269.001  c
466.774 264.430 l
467.928 264.430 l
467.928 268.626 l
467.928 269.102 467.997 269.441 468.136 269.642  c
468.275 269.844 468.506 269.944 468.830 269.944  c
469.534 269.944 470.198 269.481 470.823 268.555  c
470.823 264.430 l
471.977 264.430 l
471.977 270.794 l
h
475.979 270.940 m
475.452 270.940 474.811 270.817 474.057 270.571  c
474.057 269.510 l
474.811 269.885 475.467 270.073 476.026 270.073  c
476.358 270.073 476.633 269.983 476.852 269.803  c
477.071 269.624 477.180 269.399 477.180 269.130  c
477.180 268.735 476.873 268.409 476.260 268.151  c
475.586 267.864 l
474.590 267.450 474.092 266.854 474.092 266.077  c
474.092 265.522 474.288 265.086 474.681 264.767  c
475.074 264.449 475.612 264.290 476.295 264.290  c
476.651 264.290 477.090 264.339 477.614 264.436  c
477.854 264.483 l
477.854 265.444 l
477.209 265.253 476.698 265.157 476.319 265.157  c
475.577 265.157 475.205 265.427 475.205 265.966  c
475.205 266.313 475.487 266.606 476.049 266.844  c
476.606 267.079 l
477.235 267.344 477.680 267.625 477.942 267.920  c
478.204 268.215 478.334 268.583 478.334 269.024  c
478.334 269.583 478.114 270.042 477.672 270.401  c
477.231 270.760 476.666 270.940 475.979 270.940  c
h
482.319 270.940 m
481.733 270.940 481.276 270.772 480.948 270.436  c
480.620 270.100 480.455 269.634 480.455 269.036  c
480.455 265.298 l
479.659 265.298 l
479.659 264.430 l
480.455 264.430 l
480.455 263.276 l
481.610 263.165 l
481.610 264.430 l
483.274 264.430 l
483.274 265.298 l
481.610 265.298 l
481.610 268.825 l
481.610 269.657 481.969 270.073 482.688 270.073  c
482.840 270.073 483.026 270.048 483.245 269.997  c
483.245 270.794 l
482.889 270.891 482.580 270.940 482.319 270.940  c
h
491.975 269.985 m
491.284 270.622 490.618 270.940 489.977 270.940  c
489.450 270.940 489.012 270.775 488.664 270.445  c
488.317 270.115 488.143 269.698 488.143 269.194  c
488.143 268.499 488.435 267.965 489.019 267.592  c
489.603 267.219 490.440 267.032 491.530 267.032  c
491.805 267.032 l
491.805 266.264 l
491.805 265.526 491.426 265.157 490.668 265.157  c
490.059 265.157 489.401 265.344 488.694 265.719  c
488.694 264.764 l
489.471 264.448 490.200 264.290 490.879 264.290  c
491.590 264.290 492.115 264.450 492.453 264.770  c
492.790 265.091 492.959 265.589 492.959 266.264  c
492.959 269.147 l
492.959 269.807 493.163 270.137 493.569 270.137  c
493.620 270.137 493.694 270.130 493.791 270.114  c
493.873 270.753 l
493.612 270.878 493.323 270.940 493.006 270.940  c
492.467 270.940 492.123 270.622 491.975 269.985  c
h
491.805 269.358 m
491.805 267.712 l
491.418 267.700 l
490.786 267.700 490.274 267.820 489.883 268.060  c
489.493 268.301 489.297 268.616 489.297 269.007  c
489.297 269.284 489.395 269.518 489.590 269.710  c
489.786 269.901 490.024 269.997 490.305 269.997  c
490.786 269.997 491.286 269.784 491.805 269.358  c
h
495.321 270.794 m
495.321 264.430 l
496.475 264.430 l
496.475 265.626 l
497.084 264.735 497.830 264.290 498.713 264.290  c
499.264 264.290 499.704 264.465 500.032 264.814  c
500.360 265.164 500.524 265.634 500.524 266.223  c
500.524 270.794 l
499.370 270.794 l
499.370 266.598 l
499.370 266.126 499.300 265.789 499.162 265.588  c
499.023 265.386 498.793 265.286 498.473 265.286  c
497.766 265.286 497.100 265.749 496.475 266.675  c
496.475 270.794 l
h
505.252 270.940 m
504.393 270.940 503.680 270.622 503.114 269.985  c
502.547 269.348 502.264 268.546 502.264 267.577  c
502.264 266.542 502.544 265.735 503.105 265.157  c
503.665 264.579 504.448 264.290 505.452 264.290  c
505.948 264.290 506.502 264.358 507.116 264.495  c
507.116 265.462 l
506.463 265.270 505.932 265.175 505.522 265.175  c
504.932 265.175 504.458 265.396 504.101 265.840  c
503.744 266.283 503.565 266.874 503.565 267.612  c
503.565 268.327 503.748 268.905 504.116 269.346  c
504.483 269.788 504.963 270.009 505.557 270.009  c
506.084 270.009 506.627 269.874 507.186 269.604  c
507.186 270.600 l
506.440 270.827 505.795 270.940 505.252 270.940  c
h
508.914 270.794 m
508.914 261.542 l
510.069 261.542 l
510.069 265.626 l
510.678 264.735 511.424 264.290 512.307 264.290  c
512.858 264.290 513.297 264.465 513.625 264.814  c
513.953 265.164 514.118 265.634 514.118 266.223  c
514.118 270.794 l
512.963 270.794 l
512.963 266.598 l
512.963 266.126 512.894 265.789 512.755 265.588  c
512.617 265.386 512.387 265.286 512.067 265.286  c
511.360 265.286 510.694 265.749 510.069 266.675  c
510.069 270.794 l
h
518.852 270.940 m
517.942 270.940 517.215 270.638 516.672 270.035  c
516.129 269.431 515.858 268.624 515.858 267.612  c
515.858 266.589 516.130 265.779 516.675 265.183  c
517.220 264.588 517.959 264.290 518.893 264.290  c
519.827 264.290 520.566 264.588 521.111 265.183  c
521.656 265.779 521.928 266.585 521.928 267.600  c
521.928 268.639 521.655 269.456 521.108 270.050  c
520.561 270.643 519.809 270.940 518.852 270.940  c
h
518.870 270.073 m
520.092 270.073 520.703 269.249 520.703 267.600  c
520.703 265.971 520.100 265.157 518.893 265.157  c
517.690 265.157 517.088 265.975 517.088 267.612  c
517.088 269.253 517.682 270.073 518.870 270.073  c
h
523.733 270.794 m
523.733 264.430 l
524.887 264.430 l
524.887 265.626 l
525.344 264.735 526.008 264.290 526.879 264.290  c
526.996 264.290 527.120 264.300 527.248 264.319  c
527.248 265.397 l
527.049 265.331 526.873 265.298 526.721 265.298  c
525.991 265.298 525.379 265.731 524.887 266.598  c
524.887 270.794 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
335.847 392.952 m
411.231 284.581 l
S
newpath
415.800 278.014 m
404.842 285.010 l
410.660 285.402 l
413.052 290.720 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
